#include "tlpp-core.th"
#include "tlpp-rest.th"

//Retorna rede credenciada em json
@get("mobile/redecredenciada")
User function getRedeCredenciada()
  local ojBody := ''
  local cRet  := ''
  Local nRegs := 0
  Local oJsonRet  := NIL         // Recebe o JSON de Saida
  Local aJson  := {} //Array json

  //Abre conex伋 com o banco de dados caso esteja rodando via job
  TCLink()

  BeginSql alias "BXTEMP"
    Select B1_DESC from SB1010
  EndSql

  oJsonRet := JsonObject():new()
  //Enquanto houver registros
  While ! BXTEMP->(EoF())
    aAdd(aJson, JsonObject():new())
    nRegs := Len(aJson)
    aJson[nRegs]['B1_DESC']:=EncodeUTF8(BXTEMP->B1_DESC, "cp1252")
    BXTEMP->(DbSkip())
  EndDo
  BXTEMP->(DbCloseArea())
  oJsonRet:Set(aJson) //Atribui o array ao objeto Json na raiz

return oRest:setResponse(oJsonRet)

/*------------------------------------------------------------------
Retorna dados de um usu치rio existente
Par칙metros via [raw body]
------------------------------------------------------------------*/
@get("apirestdesenv/crud/body")
static function getBodyUser()

  local cUser := ''
  local jBody := ''

  jBody := JsonObject():new()
  jBody:fromJson( oRest:GetBodyRequest() )

  if ( jBody <> Nil )
    cUser := jBody:GetJsonText("user")
  endif

  processGetUser( cUser )
return


/*------------------------------------------------------------------
Retorna dados de um usu치rio existente
Par칙metros via [querystring]
------------------------------------------------------------------*/
@Get("apirestdesenv/crud/query")
static function getQueryUser()
  local cUser   := ''
  local jQuery  := jsonObject():New()

  jQuery := oRest:getQueryRequest()

  if ( jQuery <> Nil )
    cUser := jQuery[ 'user' ]
  endif

  processGetUser( cUser )
return 


/*------------------------------------------------------------------
Retorna dados de um usu치rio existente
Par칙metros via [pathstring]
------------------------------------------------------------------*/
@Get("apirestdesenv/crud/path/:user")
static function getPathUser()
  local cUser := ''
  local jPath := jsonObject():New()

  jPath := oRest:getPathParamsRequest()

  if (jPath <> Nil )
    cUser := jPath[ 'user' ]
  endif

  processGetUser( cUser )
return 



// ------------------------------------------------------------------ //
// ------------------------------------------------------------------ //
static function processGetUser( cUser )

  local cReturn := ''
  local lOK     := .T.
  local cMsg    := ''
  local aUser   := {}
  local cID     := ''
  local cName   := ''
  local cNick   := ''

  // Valida campo chave de busca
    if ( cUser == Nil .or. empty(cUser) )
        cUser := ''
        lOK   := .F.
        cMsg  := 'invalid parameter: user'
    endif

  if ( lOK )
    aUser := sampleCRUDtlppRestgetUser( cUser )

    if ( len(aUser) == 4 )
      lOK   := .T.
      cMsg  := 'user found'
      cID   := aUser[1]
      cName := aUser[2]
      cNick := aUser[3]
      cUser := aUser[4]
    else
      lOK     := .F.
      cMsg    := 'user could not found'
    endif
  endif

  cReturn := '{ "SUCESS": "' + if(lOK,'yes','no') + '", "MESSAGE": "' + cMsg + '", "ID": "' + cID + '", "NAME": "' + cName + '", "NICK": "' + cNick + '", "USER": "' + cUser + '" }'

  oRest:setResponse( cReturn )
return
