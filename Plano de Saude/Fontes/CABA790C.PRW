#INCLUDE "TOTVS.CH"
#INCLUDE "FWMVCDEF.CH"
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
//³ DEFINE
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
#DEFINE PLS_ADMINITRADOR '2'
STATIC lEvo := .F.
STATIC cPlMsgAud := ''
//-------------------------------------------------------------------
/*/{Protheus.doc} CABA790C

Controle da class auditoria

@author Alexander Santos
@since 16/02/2011
@version P11
/*/
//-------------------------------------------------------------------
CLASS CABA790C FROM PLSCONTR

	DATA cAudito			AS STRING
	DATA cDirFax   	 	AS STRING
	DATA cPerfil   	 	AS STRING
	DATA cDesPerf  	 	AS STRING
	DATA cCodDep	 		AS STRING
	DATA cOperad			AS STRING
	DATA cACab				AS STRING
	DATA cAIte				AS STRING
	DATA cACri				AS STRING
	DATA nIdxIte			AS NUMERIC
	DATA nIdxCri			AS NUMERIC
	DATA cOwner			AS STRING
	DATA cAllPerfil     	AS STRING
	DATA cNumGuia       	AS STRING
	DATA cCoddepa			AS STRING
	DATA lLibGuia			AS LOGIC
	DATA lIncProc			AS LOGIC
	DATA lVldRot			AS LOGIC
	DATA lIncDem   	 	AS LOGIC
	DATA lIncPar   	 	AS LOGIC
	DATA lIncEnc   	 	AS LOGIC
	DATA lMonFax   	 	AS LOGIC
	DATA lNegPar  	 		AS LOGIC
	DATA lIncAno 	 		AS LOGIC
	DATA lDemanda  	 	AS LOGIC
	DATA lInconsistente 	AS LOGIC
	DATA lIncoRes			AS LOGIC
	DATA lNotInRes			AS LOGIC
	DATA lParticipativa	AS LOGIC
	DATA lAgendada			AS LOGIC
	DATA lIntSau   	 	AS LOGIC
	DATA lVisAud   	 	AS LOGIC
	DATA lEmAnalise	 	AS LOGIC
	DATA lEspera  	 		AS LOGIC
	DATA lAnalisada  		AS LOGIC
	DATA lAutorizada 		AS LOGIC
	DATA lOwner		 	AS LOGIC
	DATA lThisDep       	AS LOGIC
	DATA lVisible	 		AS LOGIC
	DATA lHaveOwner	 	AS LOGIC
	DATA lHaveGuia			AS LOGIC
	DATA lConsulta			AS LOGIC
	DATA lSadt				AS LOGIC
	DATA lInternacao		AS LOGIC
	DATA lEvolucao			AS LOGIC
	DATA lOdonto			AS LOGIC
	DATA lReembolso		AS LOGIC
	DATA lOPME				AS LOGIC
	DATA lRotinaGen		AS LOGIC
	DATA lProrrog			AS LOGIC
	DATA lCriDia 			AS LOGIC

	METHOD New() Constructor
	METHOD GetRotiAtu(aDad,cPerfil)
	METHOD GetFiles(cDirPerf,aFiles)
	METHOD GetDocBC(nAt,aFiles,cAlias,cUnico)
	METHOD SetPerfil(cPerfil)
	METHOD SetPrioridade(cPrio)
	METHOD SetSituac(cSituac)
	METHOD SetNegPar(lNegPar)
	METHOD SetOnlyVisible(lVisible)
	METHOD SetAuditoria(lAuditoria,lIntern,lEvolu,lReembolso,lPartic,aDadCri,aCabCri,cCodCri,cRegInt,cAliasCri,aColsITE,aHeaderITE,cAliasIte)
	METHOD SetDemanda()
	METHOD EMail()
	METHOD BancoCon(cAlias,nOpc,lLog,cTipo)
	METHOD VldAplication()
	METHOD NegComp()
	METHOD VldFLD(nFolder,oTFolder,cAlias)
	METHOD VldAcessoGui(lEmAnlise,lIncons,lAutori, lAudit, cAlias)
	METHOD MarkAll(oMark,lMarcar)
	METHOD DelDocBC(nAt,aFiles)
	METHOD SetAtuPClass()
	METHOD SetFieldGui( oSelf )
	METHOD ProcPart()

	METHOD Destroy()

EndClass
//-------------------------------------------------------------------
/*/{Protheus.doc} New
Construtor da Class

@param cOperad Operadora do sistema registro da BX4

@author Alexander Santos
@since 16/02/2011
@version P11
/*/
//-------------------------------------------------------------------
METHOD New() CLASS CABA790C
	::cOperad := RETCODUSR()
	DEFAULT ::cPerfil	:= PLS_ADMINITRADOR
	DEFAULT ::cCodDep	:= ""
	DEFAULT ::lVisible	:= .F.
	DEFAULT ::lVldRot	:= .T.
	DEFAULT ::lNegPar	:= .F.
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
//³Verifica se e possivel utilizar esta rotina
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
	If !PLSALIASEXI("B53")
		::lVldRot := .F.
		_Super:ExbMHelp( "Não é possível utilizar esta rotina!" ) //"Não é possível utilizar esta rotina!"
		Return Self
	EndIf
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
//³ Atualiza informacoes da classe
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
	::SetAtuPClass()
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
//³ Se for interna-saude
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
	If ::lIntSau
		::SetOnlyVisible(.T.)
	EndIf
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
//³ Fim do Metodo
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
Return Self
//-------------------------------------------------------------------
/*/{Protheus.doc} BancoCon
Banco de conhecimento

@author Alexander Santos
@since 16/02/2011
@version P11
/*/
METHOD BancoCon(cAlias,lChkDeman,nOpc,lLog,cTipo) Class CABA790C
	LOCAL aArea      := GetArea()
	LOCAL nHoraBase  := Seconds()
	LOCAL cCodUsuDef := "XXXXXX"
	LOCAL lRet		 := .T.
	LOCAL oPADC 	 := NIL
	LOCAL cChaveIn  	:= B53->B53_NUMGUI
	LOCAL cChaveAC9 := If(B53->B53_TIPO == "6", xfilial('B4A')+cChaveIn, xfilial('BE4')+cChaveIn)

	PRIVATE aRotina  := {}
	DEFAULT nOpc 	 := 1
	DEFAULT lLog	 := .T.
	DEFAULT lChkDeman:= .F.

	aRotina := {{"Conhecimento",'MsDocument',0,3},{"Inclusão Rápida",'PLSDOcs',0,3}} //"Conhecimento"

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
//³ Atualiza informacoes da classe
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
	::SetAtuPClass()
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
//³ Se nao for interna-saude e a guia é de demanda
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
	If lChkDeman .And. !::lIntSau
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
	//³ Verifica se foi selecionada a opcao de b. conhecimento da demanda.
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
		oPADC := PLSPADRC():New(cAlias)
	
		If oPADC:lMDDemanda .And. ::lDemanda
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
		//³ Verifica se o registro de demanda (processo) pode ser editado se nao for 
		//³ o owner especifico do registro lOwnerEsp
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
			If !oPADC:lOwnerEsp .And. !oPADC:lEditaProcesso
				_Super:ExbMHelp( "Acesso negado ao processo") //"Acesso negado ao processo"
				Return
			EndIf
		EndIf
	
		oPADC:Destroy()
	EndIf
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
//³ Se o acesso foi permitido exibi banco de conhecimento
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
	If B53->B53_TIPO != "6"

		BEA->( DbSetOrder(1) ) //BEA_FILIAL + BEA_OPEMOV + BEA_ANOAUT + BEA_MESAUT + BEA_NUMAUT + DTOS(BEA_DATPRO) + BEA_HORPRO
		BEA->( MsSeek( xFilial("BEA") + cChaveIn ) )
	
		if cTipo == "I"
	
			DbSelectArea("BE2")
			cIndex := CriaTrab(NIL,.F.)
			cQuery := "BE2_FILIAL == '" + xFilial("BE2") + "' "
			cQuery += " .And. BE2_OPEMOV == '" + BEA->BEA_OPEMOV + "'"
			cQuery += " .And. BE2_ANOAUT == '" + BEA->BEA_ANOAUT + "'"
			cQuery += " .And. BE2_MESAUT == '" + BEA->BEA_MESAUT + "'"
			cQuery += " .And. BE2_NUMAUT == '" + BEA->BEA_NUMAUT + "'"
		
			IndRegua("BE2",cIndex,BE2->(IndexKey()),,cQuery)
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
		//³ Ativa o banco de conhecimento
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
		
			If BE2->(!Eof())
				lRet := MaWndBrowse(0,0,300,600,"Usuário","BE2",,aRotina,,,,.T.,,,,,,.F.) //"Retorno de Doctos. de Saida"
			EndIf
		
		else
	
			DbSelectArea("BEA")
			cIndex := CriaTrab(NIL,.F.)
			MsDocument( "BEA", BEA->( RecNo() ), 2 )
	
		endif

	Else

		B4A->( DbSetOrder(1) ) //B4A_FILIAL + B4A_OPEMOV + B4A_ANOAUT + B4A_MESAUT + B4A_NUMAUT + DTOS(B4A_DATPRO) + B4A_HORPRO
		B4A->( MsSeek( xFilial("B4A") + cChaveIn ) )
	
		if cTipo == "I"

			DbSelectArea("B4C")
			cIndex := CriaTrab(NIL,.F.)
			cQuery := "B4C_FILIAL == '" + xFilial("B4C") + "' "
			cQuery += " .And. B4C_OPEMOV == '" + B4A->B4A_OPEMOV + "'"
			cQuery += " .And. B4C_ANOAUT == '" + B4A->B4A_ANOAUT + "'"
			cQuery += " .And. B4C_MESAUT == '" + B4A->B4A_MESAUT + "'"
			cQuery += " .And. B4C_NUMAUT == '" + B4A->B4A_NUMAUT + "'"
		
			IndRegua("B4C",cIndex,B4C->(IndexKey()),,cQuery)
		
			If B4C->(!Eof())
				MaWndBrowse(0,0,300,600,"Retorno de Doctos. de Saida","B4C",,aRotina,,,,.T.,,,,,,.F.) //"Retorno de Doctos. de Saida"
			EndIf
		
		else
	
			DbSelectArea("B4A")
			cIndex := CriaTrab(NIL,.F.)
			MsDocument( "B4A", B4A->( RecNo() ), 2 )
	
		endif
		
	EndIf

	AC9->(DbSetOrder(2))//AC9_FILIAL, AC9_ENTIDA, AC9_FILENT, AC9_CODENT, AC9_CODOBJ, R_E_C_N_O_, D_E_L_E_T_

	If AC9->(dbSeek( xFilial("AC9") + cAlias +xfilial(cAlias)+cChaveAC9))
		dbSelectArea("B53")
		If B53->(dbSeek(xFilial("B53")+cChaveIn))
			If B53->B53_BANCON != '1'
				B53->(Reclock("B53",.F.))
				B53->B53_BANCON := '1'
				B53->(MsUnlock())
			EndIf
		EndIf
	else
		dbSelectArea("B53")
		If B53->(dbSeek(xFilial("B53")+cChaveIn))
			If B53->B53_BANCON != '0'
				B53->(Reclock("B53",.F.))
				B53->B53_BANCON := '0'
				B53->(MsUnlock())
			EndIf
		EndIf
	EndIf

	RetIndex( cAlias )
	dbClearFilter()
	FErase( cIndex+OrdBagExt() )

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
//³ Se cancelou 
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
	If !lRet
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
	//³ Deleta registro da acb de lixo
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
		DelAcbAc9()
	Else
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
	//³ Inclusao ou exclusao de banco de conhecimento na guia
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
		If cAlias == 'BE2'
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
		//³ Autaliza guia
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
			B53 := PLSSTRUC():New( "B53",4,,B53->( Recno() ) )
			B53:SetValue("B53_BANCON",'1' )
			B53:CRUD()
			B53:Destroy()
		EndIf
	EndIf
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
//³ Registro de log da rotina
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
	If lLog
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
	//³ Grava registro de alteracao da aplicacao ou tabela
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
		oBX3 := PLSSTRUC():New("BX3")
		oBX3:SetlAltera(.T.)
		oBX3:SetValue("BX3_FILIAL", xFilial("BX3") )
		oBX3:SetValue("BX3_ALIAS", cAlias )
		oBX3:SetValue("BX3_DATA", Date() )
		oBX3:SetValue("BX3_HORA", Time() )
		oBX3:SetValue("BX3_ESTTRB", GetComputerName() )
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
	//³ Se incluiu alguma coisa no banco de conhecimento
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
		If lRet
			oBX3:SetValue("BX3_OPERAD", cCodUsuDef )
			oBX3:SetValue("BX3_TIPO", '1' )
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
		//³ Grava dados na base de dados
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
			If !oBX3:CRUD()
				oBX3:ExbMHelp( oBX3:GetErrorMessage(.T.) )
			EndIf
		EndIf
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
	//³ Atualiza registro de acesso do usuario corrente
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
		oBX3:SetValue("BX3_OPERAD", ::cOperad )
		oBX3:SetValue("BX3_TIPO", '0' )
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
	//³ Grava dados na base de dados
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
		If !oBX3:CRUD()
			oBX3:ExbMHelp( oBX3:GetErrorMessage(.T.) )
		EndIf
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
	//³ Destroy o modelo
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
		oBX3:Destroy()
	EndIf
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
//³ Rest nas linhas do browse e na area
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
	RestArea( aArea )
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
//³ Duração
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
	_Super:SetLog(nHoraBase)
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
//³ Fim da Rotina
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
Return(lRet)
/*/{Protheus.doc} GetRotiAtu
Retorna se uma rotina foi ou nao atualizada

@author Alexander Santos
@since 16/02/2011
@version P11
/*/
METHOD GetRotiAtu(aDad,cPerfil) Class CABA790C
	LOCAL aRet		 := {}
	LOCAL nI		 := 1
	LOCAL oGEN		 := NIL
	LOCAL cTipoRe	 := '1'
	LOCAL cTipoAc	 := '0'
	LOCAL cCodUsuDef := "XXXXXX"
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
//³ Dados do Operador
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
	For nI:=1 To Len(aDad)
		If nI > Len(aDad)
			Exit
		EndIf
	
		If ("XXX" == aDad[nI,1] .And. !::lMonFax) .Or. ("B69" == aDad[nI,1] .And. !::lIncAno) .Or.;
				("B68" == aDad[nI,1] .And. !::lIncDem) .Or. ("B72" == aDad[nI,1] .And. !::lIntSau) .Or.;
				("B70" == aDad[nI,1] .And. !::lIncPar) .Or. ("B71" == aDad[nI,1] .And. !::lIncEnc)
			aDel(aDad,nI)
			aSize(aDad,Len(aDad)-1)
			nI--
		EndIf
	Next
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
//³ Selecion todos os acesso deste usuario 
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
	oGEN := CABREGIC():New()
	oGEN:GetDadBx3(aDad,::cOperad,cTipoAc,cCodUsuDef,cTipoRe)
	oGEN:Destroy()
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
//³ Retorna Matriz Ajustada
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
	aRet := _Super:GetVal(aDad,,.T.)
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
//³ Fim da funcao
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
Return(aRet)
//-------------------------------------------------------------------
/*/ { Protheus.doc } VldFLD
Validacao ao entrar no folder

@author Alexander Santos
@since 02/02/11
@version 1.0
/*/
//-------------------------------------------------------------------
METHOD VldFLD(nFolder,oTFolder,cAlias) Class CABA790C
	LOCAL lRet := .T.
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Instancia o modelo de dados												 ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	oBX3 := PLSSTRUC():New("BX3")
	oBX3:SetValue("BX3_FILIAL", xFilial("BX3") )
	oBX3:SetValue("BX3_OPERAD", ::cOperad )
	oBX3:SetValue("BX3_ALIAS", cAlias )
	oBX3:SetValue("BX3_DATA", Date() )
	oBX3:SetValue("BX3_HORA", Time() )
	oBX3:SetValue("BX3_TIPO", '0' )
	oBX3:SetValue("BX3_ESTTRB", GetComputerName() )
	oBX3:SetlAltera(.T.)
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Grava dados na base de dados											 ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If !oBX3:CRUD()
		oBX3:ExbMHelp( oBX3:GetErrorMessage(.T.) )
	EndIf
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Destroy o modelo														 ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	oBX3:Destroy()
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
//³ Atualiza a descricao do folder
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
	oTFolder:ADIALOGS[nFolder]:cTitle := AllTrim(StrTran(oTFolder:ADIALOGS[nFolder]:cTitle,'*',''))
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
//³ Fim da rotina
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
Return(lRet)
//-------------------------------------------------------------------
/*/ { Protheus.doc } MarkAll
Marca e desmarca linhas do browse

@author Alexander Santos
@since 02/02/11
@version 1.0
/*/
//-------------------------------------------------------------------
METHOD MarkAll(oMark,lMarcar) Class CABA790C
	LOCAL aArea   := GetArea()
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
//³ Restaura area
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
	RestArea( aArea )
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
//³ Fim da rotina
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
Return NIL
//-------------------------------------------------------------------
/*/ { Protheus.doc } SetPerfil
Seta o perfil desejado

@author Alexander Santos
@since 09/03/11
@version 1.0
/*/
//-------------------------------------------------------------------
METHOD SetPerfil(cPerfil) Class CABA790C
	::cPerfil := cPerfil
Return
//-------------------------------------------------------------------
/*/ { Protheus.doc } SetPrioridade
Seta prioridade da guia

@author Alexander Santos
@since 09/03/11
@version 1.0
/*/
//-------------------------------------------------------------------
METHOD SetPrioridade(cPrio) Class CABA790C
	LOCAL B53 := NIL
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
//³ Seta nova prioridade
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
	If !Empty(X3COMBO("B53_PRIORI",cPrio))
		B53 := PLSSTRUC():New( "B53",4,,B53->( Recno() ) )
		B53:SetValue("B53_PRIORI", cPrio)
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
	//³ Grava dados na base de dados											 
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
		If !B53:CRUD()
			B53:ExbMHelp( B53:GetErrorMessage(.T.) )
		EndIf
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
	//³ Destroy
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
		B53:Destroy()
	Else
		_Super:ExbMHelp( "Opção BOX do campo invalida") //"Opção BOX do campo invalida"
	EndIf
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
//³ Fim do Metodo
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
Return
//-------------------------------------------------------------------
/*/ { Protheus.doc } SetNegPar
Seta a opcao negar participacao

@author Alexander Santos
@since 09/03/11
@version 1.0
/*/
//-------------------------------------------------------------------
METHOD SetNegPar(lNegPar) Class CABA790C
	::lNegPar := lNegPar
Return
//-------------------------------------------------------------------
/*/ { Protheus.doc } SetSituac
Seta situac da guia

@author Alexander Santos
@since 09/03/11
@version 1.0
/*/
//-------------------------------------------------------------------
METHOD SetSituac(cSituac) Class CABA790C
	LOCAL oB53		:= NIL
	LOCAL oGEN 	:= NIL
	LOCAL aChave := {}
	LOCAL aChaveB4A	:= {}
	LOCAL aChaveBE2	:= {}
	LOCAL aChaveBEJ	:= {}
	LOCAL aChaveBQV 	:= {}
	LOCAL aChaveB45 	:= {}
	LOCAL nPosit := 0
	LOCAL nNegat := 0
	LOCAL cOperad := If (GetNewPar("MV_PLFLUIG", .F.) == .T.,GetNewPar("MV_OPERFLG","0000"),::cOperad)
	LOCAL cTipo
	LOCAL aDadUsr := PLSDADUSR(B53->B53_MATUSU,'1',.F.,dDatabase,,,"NAO_VALIDAR_CARTAO")
	Local lForLib := .F.
	LOCAL lFamYes	:= 	.F.
 
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
//³ Atualiza informacoes da classe
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

	::SetAtuPClass()

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
//³ Verifica se tem guia selecionada
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
	If !::lHaveGuia

		_Super:ExbMHelp( "Não existe guia para analise") //"Não existe guia para analise"
		Return
	EndIf
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
//³ Verifica se a guia tem o mesmo perfil do auditor
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
	If ::cPerfil <> PLS_ADMINITRADOR .And. !(::cPerfil $ ::cAllPerfil)
		_Super:ExbMHelp( "O seu perfil não esta autorizado a analisar esta guia!") //"O seu perfil não esta autorizado a analisar esta guia!"
		Return
	EndIf

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
//³ Se a guia estiver cancelada não podera auditar.
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
	If B53->B53_STATUS = "6"
		_Super:ExbMHelp("Esta guia foi cancelada.")//"Esta guia foi cancelada."
		Return
	EndIf

	If B53->b53_TIPO = "2"
		BEA->(dbSetOrder(12))
	
		If BEA->(dbSeek(xFilial("BEA")+B53->(B53_CODOPE+B53_CODLDP+B53_CODPEG+B53_NUMERO+B53_ORIMOV)))
			If BEA->BEA_CANCEL == "1"
				_Super:ExbMHelp("Esta guia foi cancelada.")//"Esta guia foi cancelada."
				Return
			EndIf
		EndIf
	EndIf
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
//³ Verifica se o beneficiário foi desligado ou familia bloqueada
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
	BA3->(dbSetOrder(1))
	If BA3->(dbSeek(xFilial("BA3") + SUBSTR(B53->B53_MATUSU,1,14)+aDadUsr[9]+aDadUsr[12]+aDadUsr[41]+aDadUsr[42])) .And. B53->B53_PROINT <> '1'
	
		If !EMPTY(BA3->BA3_DATBLO) .AND. BA3->BA3_DATBLO <= dDataBase
			BDS->(dbSetOrder(1))
			If BDS->(dbSeek(xFilial("BDS") + B53->B53_NUMGUI)) .And. B53->B53_SITUAC == '0' .And. Empty(BDS->(BDS_CODPAD+BDS_SEQUEN+BDS_CODPRO)) .And. B53->B53_TIPO <>"6"
				nOk:= 	Aviso("Usuário Bloqueado"  ,;//"Usuário Bloqueado"
				"Problemas com o contrato do beneficiário no período do atendimento, porém a crítica de bloqueio foi forçada com a seguinte justificativa:" + CRLF + ;//"Problemas com o contrato do beneficiário no período do atendimento, porém a crítica de bloqueio foi forçada com a seguinte justificativa:"
				"Observação: " + AllTrim(BDS->BDS_OBSMOT) + CRLF +;//"Observação: "
				"Operador: " + AllTrim(BDS->BDS_OPESIS) + " - " + AllTrim(BDS->BDS_NOMOPE) + CRLF + "Deseja Prosseguir?",;//"Operador: " ## "Deseja Prosseguir?"
				{"Sim","Não"},3) //"Sim" "Não"
				If nOk == 2
					Return
				Else
					lFamYes := .T.
				EndIf

			ElseIf B53->B53_TIPO =="6" .And. !Empty(B4A->B4A_GUIREF) .And. BDS->(dbSeek(xFilial("BDS") + B4A->B4A_GUIREF)) .And. B53->B53_SITUAC == '0' .And. Empty(BDS->(BDS_CODPAD+BDS_SEQUEN+BDS_CODPRO))
				nOk:= 	Aviso("Usuário Bloqueado"  ,;//"Usuário Bloqueado"
				"Problemas com o contrato do beneficiário no período do atendimento, porém a crítica de bloqueio foi forçada com a seguinte justificativa:" + CRLF + ;//"Problemas com o contrato do beneficiário no período do atendimento, porém a crítica de bloqueio foi forçada com a seguinte justificativa:"
				"Observação: " + AllTrim(BDS->BDS_OBSMOT) + CRLF +;//"Observação: "
				"Operador: " + AllTrim(BDS->BDS_OPESIS) + " - " + AllTrim(BDS->BDS_NOMOPE) + CRLF + "Deseja Prosseguir?",;//"Operador: " ## "Deseja Prosseguir?"
				{"Sim","Não"},3) //"Sim" "Não"
				If nOk == 2
					Return
				Else
					lFamYes := .T.
				EndIf

			ElseIf B53->B53_SITUAC == '0'
				_Super:ExbMHelp("Família bloqueada, não será possível auditar a guia.")//"Família bloqueada, não será possível auditar a guia."
				Return
			EndIf
		ElseIf !EMPTY(BA3->BA3_DESLIG) .AND. BA3->BA3_LIMITE < dDataBase
			
			_Super:ExbMHelp("Beneficiário desligado, não será possível auditar a guia.")//"Beneficiário desligado, não será possível auditar a guia."
			Return
		EndIf
	EndIf

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
//³ Verifica se o beneficiário esta bloqueado
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
	BA1->(dbSetOrder(2))
	If BA1->(dbSeek(xFilial("BA1") + B53->B53_MATUSU)) .And. B53->B53_PROINT <> '1'
	
		If !EMPTY(BA1->BA1_DATBLO) .AND. BA1->BA1_DATBLO <= dDataBase .And. !lFamYes
	
			BDS->(dbSetOrder(1))
			If BDS->(dbSeek(xFilial("BDS") + B53->B53_NUMGUI)) .And. B53->B53_SITUAC == '0' .And. Empty(BDS->(BDS_CODPAD+BDS_SEQUEN+BDS_CODPRO)) .And. B53->B53_TIPO <>"6"
				nOk:= 	Aviso("Usuário Bloqueado"  ,;//"Usuário Bloqueado"
				"Problemas com o contrato do beneficiário no período do atendimento, porém a crítica de bloqueio foi forçada com a seguinte justificativa:" + CRLF + ;//"Problemas com o contrato do beneficiário no período do atendimento, porém a crítica de bloqueio foi forçada com a seguinte justificativa:"
				"Observação: " + AllTrim(BDS->BDS_OBSMOT) + CRLF +;//"Observação: "
				"Operador: " + AllTrim(BDS->BDS_OPESIS) + " - " + AllTrim(BDS->BDS_NOMOPE) + CRLF + "Deseja Prosseguir?",;//"Operador: " ## "Deseja Prosseguir?"
				{"Sim","Não"},3)//"Sim" "Não"
				If nOk == 2
					Return
				EndIf
			ElseIf B53->B53_TIPO =="6" .And. !Empty(B4A->B4A_GUIREF) .And. BDS->(dbSeek(xFilial("BDS") + B4A->B4A_GUIREF)) .And. B53->B53_SITUAC == '0' .And. Empty(BDS->(BDS_CODPAD+BDS_SEQUEN+BDS_CODPRO)) .And. B53->B53_TIPO <>"6"
				nOk:= 	Aviso("Usuário Bloqueado"  ,;//"Usuário Bloqueado"
				"Problemas com o contrato do beneficiário no período do atendimento, porém a crítica de bloqueio foi forçada com a seguinte justificativa:" + CRLF + ;//"Problemas com o contrato do beneficiário no período do atendimento, porém a crítica de bloqueio foi forçada com a seguinte justificativa:"
				"Observação: " + AllTrim(BDS->BDS_OBSMOT) + CRLF +;//"Observação: "
				"Operador: "  + AllTrim(BDS->BDS_OPESIS) + " - " + AllTrim(BDS->BDS_NOMOPE) + CRLF + "Deseja Prosseguir?",;//"Operador: " ## "Deseja Prosseguir?"
				{"Sim","Não"},3)//"Sim" "Não"
				If nOk == 2
					Return
				EndIf

			ElseIf B53->B53_SITUAC == '0'
				_Super:ExbMHelp("Usuário bloqueado, não será possível auditar a guia.")//"Usuário bloqueado, não será possível auditar a guia."
				Return
			EndIf
		
		EndIf
	EndIf

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
//³ Verifica se a RDA esta bloqueada
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
	BAU->(dbSetOrder(1))
	If BAU->(dbSeek(xFilial("BAU") + B53->B53_CODRDA))
	
	//se a data do bloqueio for menor que a data atual, exibe a mensagem.
		If !EMPTY(BAU->BAU_CODBLO) .AND. BAU->BAU_DATBLO < dDataBase
			
			_Super:ExbMHelp("RDA bloqueada, não será possível auditar a guia.")//"RDA bloqueada, não será possível auditar a guia."
			Return
	
	//Se a data do bloqueio for igual a data atual, verifica ba BC4 se a RDA esta bloqueada de acordo com a hora incluida.
		ElseIf BAU->BAU_DATBLO == dDataBase
		
			BC4->(dbSetOrder(1))
		
			If BC4->(dbSeek(xFilial("BC4") + B53->B53_CODRDA + DTOS(dDataBase)))
			
			//verifica os registros de bloqueio e desbloqueio.
				While !BC4->(EOF()) .AND. BC4->(BC4_FILIAL + BC4_CODCRE + DTOS(BC4_DATA)) == xFilial("BC4") + B53->B53_CODRDA + DTOS(dDataBase)
				
				//verificar se o ultimo registro é de bloqueio e se o horário do bloqueio ja foi ultrapassado.
					If BC4->BC4_TIPO == "0" .AND. BC4->BC4_HORA <= SUBSTR(STRTRAN(TIME(), ":", ""),1,4)
						cTipo := BC4->BC4_TIPO
					Else
						cTipo := "1"
					EndIf
				
					BC4->(dbSkip())
				EndDo
			
			// exibe a mensagem de bloquieo da RDA.
				If cTipo == "0"
					_Super:ExbMHelp("RDA bloqueada, não será possível auditar a guia.")//"RDA bloqueada, não será possível auditar a guia."
					Return
				EndIf
			EndIf
		EndIf
	EndIf

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
//³ Tratamento do Situac
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
	Do Case
	
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
	//³ A guia vai ficar em espera
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
	Case cSituac == "3"
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
		//³ Verifica se tem acesso a guia
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
		If !::VldAcessoGui()
			Return
		EndIf
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
	//³ Retira guia do monitor
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
	Case cSituac == "1"
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
		//³ Verifica se tem acesso a guia
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
		If !::VldAcessoGui()
			Return
		EndIf
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
		//³ Guia autorizada e procedimento da auditoria participativa
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
		If !::lParticipativa .And. ::lAutorizada
			_Super:ExbMHelp( "Somente guia Autorizada e Participativa") //"Somente guia Autorizada e Participativa"
			Return
		EndIf
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
	//³ Liberar ou Pegar guia
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
	Case cSituac == "2"
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
		//³ Ja foi analisada e tem inconsistencia
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
		If ::lInconsistente
			_Super:ExbMHelp( "Esta guia já foi analisada, utilize a opção Inconsistência" ) //"Esta guia já foi analisada, utilize a opção Inconsistência"
			Return
		EndIf
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
		//³ Se esta reservada para outro operador
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
		If ::lHaveOwner .And. !::lOwner
			//Verifica se o usuário tem autorização para liberar guias bloqueadas por outros usuários e se não apresentou a mensagem 
			IF ::lLibGuia .and. !cPlMsgAud == B53->(B53_CODLDP+B53_CODPEG+B53_NUMERO)
				lForLib := MsgYesNo("A guia esta bloqueada para:" + UPPER(USRRETNAME(B53->B53_OPERAD)) + "Deseja mesmo liberar esta Guia?", "Tem autorização?") //A guia esta bloqueada para:/"Deseja mesmo liberar esta Guia?"
				cPlMsgAud := B53->(B53_CODLDP+B53_CODPEG+B53_NUMERO)
			//Verifica se o usuário tem autorização para liberar guias bloqueadas por outros usuários e se já exibiu a mensagem 
			ElseIf ::lLibGuia .and. cPlMsgAud == B53->(B53_CODLDP+B53_CODPEG+B53_NUMERO)
				lForLib := .T.
			EndIf
			IF (!lForLib)
				_Super:ExbMHelp( "Guia reservada para outro Operador" ) //"Guia reservada para outro Operador"
				Return
			EndIf
		EndIf
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
		//³ Se e do mesmo departamento
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
		If !::lHaveOwner .And. !::lThisDep
			_Super:ExbMHelp( "Somente o operador deste departamento tem acesso" ) //"Somente o operador deste departamento tem acesso"
			Return
		EndIf
	
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
		//³ Verifica status atual da guia
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

		If ::cACri == "BEG"
	
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
	//³ Se a guia foi analisada por completo, não será possível reservar a guia
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

			If B53->b53_SITUAC == "1"
				_Super:ExbMHelp("")
				Return
			EndIf
	
			If B53->B53_ALIMOV == "B4A"
		
				B4A->(dbSetOrder(1))
				If B4A->(dbSeek(xFilial("BA4")+B53->B53_NUMGUI))
	
					While !B4A->(EOF()) .AND. xFilial("B4A")+B4A->(B4A_OPEMOV+B4A_ANOAUT+B4A_MESAUT+B4A_NUMAUT) ==;
							xFilial("B4A")+B53->B53_NUMGUI
	
						If B4A->B4A_STATUS == '1'
							nPosit++
						Else
							nNegat++
						EndIf
						B4A->(dbSkip())
					EndDo
				EndIf
			Else
	
				BE2->(dbSetOrder(1))
				If BE2->(dbSeek(xFilial("BE2")+B53->B53_NUMGUI))
	
					While !BE2->(EOF()) .AND. xFilial("BE2")+BE2->(BE2_OPEMOV+BE2_ANOAUT+BE2_MESAUT+BE2_NUMAUT) ==;
							xFilial("BE2")+B53->B53_NUMGUI
	
						If BE2->BE2_STATUS == '1'
							nPosit++
						Else
							nNegat++
						EndIf
						BE2->(dbSkip())
					EndDo
				EndIf
			EndIf
	
			oB53 := PLSSTRUC():New( "B53",4,,B53->( Recno() ) )

			if nPosit == 0 .AND. nNegat > 0
				oB53:SetValue("B53_STATUS", "3")
			ElseIf nPosit > 0 .AND. nNegat > 0
				oB53:SetValue("B53_STATUS", "2")
			ElseIf nPosit > 0 .AND. nNegat == 0
				oB53:SetValue("B53_STATUS", "1")
			EndIf

			If !oB53:CRUD()
				oB53:ExbMHelp( oB53:GetErrorMessage(.T.) )
			EndIf
		Else

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
	//³ Se a guia foi analisada por completo, não será possível reservar a guia
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

			If B53->B53_SITUAC == "1"
				_Super:ExbMHelp("")
				Return
			EndIf
	
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
	//³ se aguia nao foi analisada por completo a guia podera ser reservada
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
			BEJ->(dbSetOrder(1))
			If BEJ->(dbSeek(xFilial("BEJ")+B53->B53_NUMGUI))

				While !BEJ->(EOF()) .AND. xFilial("BEJ")+BEJ->(BEJ_CODOPE+BEJ_ANOINT+BEJ_MESINT+BEJ_NUMINT) ==;
						xFilial("BEJ")+B53->B53_NUMGUI

					If BEJ->BEJ_STATUS == '1'
						nPosit++
					Else
						nNegat++
					EndIf
					BEJ->(dbSkip())
				EndDo

				BQV->(dbSetOrder(1))
				If BQV->(dbSeek(xFilial("BQV")+B53->B53_NUMGUI))

					While !BQV->(EOF()) .AND. xFilial("BQV")+BQV->(BQV_CODOPE+BQV_ANOINT+BQV_MESINT+BQV_NUMINT) ==;
							xFilial("BQV")+B53->B53_NUMGUI

						If BQV->BQV_STATUS == '1'
							nPosit++
						Else
							nNegat++
						EndIf
						BQV->(dbSkip())
					EndDo
				EndIf

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
//³ Cria o objeto para a atualizacao
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
				oB53 := PLSSTRUC():New( "B53",4,,B53->( Recno() ) )

				if nPosit == 0 .AND. nNegat > 0
					oB53:SetValue("B53_STATUS", "3")
				ElseIf nPosit > 0 .AND. nNegat > 0
					oB53:SetValue("B53_STATUS", "2")
				ElseIf nPosit > 0 .AND. nNegat == 0
					oB53:SetValue("B53_STATUS", "1")
				EndIf

				If !oB53:CRUD()
					oB53:ExbMHelp( oB53:GetErrorMessage(.T.) )
				EndIf
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
//³ Destroy
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
				oB53:Destroy()
			EndIf

		EndIf
		
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
		//³ Chave
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
		aChave := {}
		AaDd(aChave, { ::SetFieldGui(::cACri+"_OPEMOV"), '=', Left(B53->B53_NUMGUI,4) } )
		AaDd(aChave, { ::SetFieldGui(::cACri+"_ANOAUT"), '=', SubStr(B53->B53_NUMGUI,5,4) } )
		AaDd(aChave, { ::SetFieldGui(::cACri+"_MESAUT"), '=', SubStr(B53->B53_NUMGUI,9,2)} )
		AaDd(aChave, { ::SetFieldGui(::cACri+"_NUMAUT"), '=', Right(B53->B53_NUMGUI,8)} )
		If (::cACri)->( FieldPos(::cACri+"_PENDEN") ) > 0
			AaDd(aChave, { ::cACri+"_PENDEN", '<>', '0'} )
		Endif
		If (::cACri)->( FieldPos(::cACri+"_CODGLO") ) > 0
			AaDd(aChave, { ::cACri+"_CODGLO", '<>', ''} )
		Endif
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
		//³ verifica se a guia foi totalmente analisada 
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
		
		If B53->b53_SITUAC == "2"
				
			If ::cACri == "BEG"
				
				If B53->B53_ALIMOV == "B4A"
					B4A->(dbSetOrder(1))
					B4A->(dbGoTop())
			
					IF B4A->(dbSeek( xFilial("B4A")+B53->B53_NUMGUI))
					
						aChaveB4A := {}
						AaDd(aChaveB4A, { "B4A_OPEMOV", '=', Left(B53->B53_NUMGUI,4) 		} )
						AaDd(aChaveB4A, { "B4A_ANOAUT", '=', SubStr(B53->B53_NUMGUI,5,4) 	} )
						AaDd(aChaveB4A, { "B4A_MESAUT", '=', SubStr(B53->B53_NUMGUI,9,2) 	} )
						AaDd(aChaveB4A, { "B4A_NUMAUT", '=', Right(B53->B53_NUMGUI,8) 		} )
												
						oGEN := CABREGIC():New()
						
						If oGEN:GetCountReg("B4A",aChaveB4A ) == 0
							cSituac := "1"
						Else
							cSituac := "0"
						EndIf
							
						oGEN:Destroy()
					EndIf
				Else
				
					BE2->(dbSetOrder(1))
					BE2->(dbGoTop())
			
					IF BE2->(dbSeek( xFilial("BE2")+B53->B53_NUMGUI))
					
						aChaveBE2 := {}
						AaDd(aChaveBE2, { "BE2_OPEMOV", '=', Left(B53->B53_NUMGUI,4) 		} )
						AaDd(aChaveBE2, { "BE2_ANOAUT", '=', SubStr(B53->B53_NUMGUI,5,4) 	} )
						AaDd(aChaveBE2, { "BE2_MESAUT", '=', SubStr(B53->B53_NUMGUI,9,2) 	} )
						AaDd(aChaveBE2, { "BE2_NUMAUT", '=', Right(B53->B53_NUMGUI,8) 		} )
												
						oGEN := CABREGIC():New()
						
						If oGEN:GetCountReg("BE2",aChaveBE2 ) == 0
							cSituac := "1"
						Else
							cSituac := "0"
						EndIf
							
						oGEN:Destroy()
					EndIf
				EndIf
			Else
				BEJ->(dbSetOrder(1))
				BEJ->(dbGoTop())
		
				IF BEJ->(dbSeek( xFilial("BEJ")+B53->B53_NUMGUI))
				
					aChaveBEJ := {}
					AaDd(aChaveBEJ, { "BEJ_CODOPE", '=', Left(B53->B53_NUMGUI,4) 		} )
					AaDd(aChaveBEJ, { "BEJ_ANOINT", '=', SubStr(B53->B53_NUMGUI,5,4) 	} )
					AaDd(aChaveBEJ, { "BEJ_MESINT", '=', SubStr(B53->B53_NUMGUI,9,2) 	} )
					AaDd(aChaveBEJ, { "BEJ_NUMINT", '=', Right(B53->B53_NUMGUI,8) 		} )
											
					oGEN := CABREGIC():New()
					
					If oGEN:GetCountReg("BEJ",aChaveBEJ ) == 0
						cSituac := "1"
					Else
						cSituac := "0"
					EndIf
						
					oGEN:Destroy()
						
				EndIf
				
				IF BQV->(dbSeek( xFilial("BQV")+B53->B53_NUMGUI))
					
					aChaveBQV := {}
					AaDd(aChaveBQV, { "BQV_CODOPE", '=', Left(B53->B53_NUMGUI,4) 		} )
					AaDd(aChaveBQV, { "BQV_ANOINT", '=', SubStr(B53->B53_NUMGUI,5,4) 	} )
					AaDd(aChaveBQV, { "BQV_MESINT", '=', SubStr(B53->B53_NUMGUI,9,2) 	} )
					AaDd(aChaveBQV, { "BQV_NUMINT", '=', Right(B53->B53_NUMGUI,8) 		} )
					AaDd(aChaveBQV, { "BQV_AUDITO", '=', "1" 		} )
						
					oGEN := CABREGIC():New()
					
					If oGEN:GetCountReg("BQV",aChaveBQV ) == 0
						cSituac := "1"
					Else
						cSituac := "0"
					EndIf
						
					oGEN:Destroy()
				
				EndIf
				 
				IF B45->(dbSeek( xFilial("B45")+B53->B53_NUMGUI))
					
					aChaveB45 := {}
					AaDd(aChaveB45, { "B45_OPEMOV", '=', Left(B53->B53_NUMGUI,4) 		} )
					AaDd(aChaveB45, { "B45_ANOAUT", '=', SubStr(B53->B53_NUMGUI,5,4) 	} )
					AaDd(aChaveB45, { "B45_MESAUT", '=', SubStr(B53->B53_NUMGUI,9,2) 	} )
					AaDd(aChaveB45, { "B45_NUMAUT", '=', Right(B53->B53_NUMGUI,8) 		} )
											
					oGEN := CABREGIC():New()
					
					If oGEN:GetCountReg("B45",aChaveB45 ) == 0
						cSituac := "1"
					Else
						cSituac := "0"
					EndIf
						
					oGEN:Destroy()
					
						
				EndIf
			EndIf
		EndIf
	OtherWise
	EndCase
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
//³ Se e situac valido
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
	If !Empty(X3COMBO("B53_SITUAC",cSituac)) //0=Não;1=Sim;2=Em Analise;3=Em Espera;4=Inconsistência
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
	//³ Seta nova prioridade
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
		oB53 := PLSSTRUC():New( "B53",4,,B53->( Recno() ) )
		oB53:SetValue("B53_SITUAC", cSituac)
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
	//³ Atualiza informacoes da guia data e hora
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
		Do Case
		Case cSituac == '1'
			oB53:SetValue("B53_DATFIM", dDataBase )
			oB53:SetValue("B53_HORFIM", Left(Time(),5) )
			
		Case cSituac == '2' .AND. EMPTY(B53->B53_DATINI)
			oB53:SetValue("B53_DATINI", dDataBase )
			oB53:SetValue("B53_HORINI", Left(Time(),5) )
		EndCase
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
	//³ Atribui operador da guia
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
		If !::lHaveOwner .OR. cSituac == '3' .OR. cSituac == '2'
			oB53:SetValue("B53_OPERAD",cOperad)
		Else
			oB53:SetValue("B53_OPERAD",'')
		EndIf
	 
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
	//³ Grava dados na base de dados
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
		If !oB53:CRUD()
			oB53:ExbMHelp( oB53:GetErrorMessage(.T.) )
		EndIf
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
	//³ Destroy
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
		oB53:Destroy()
	Else
		_Super:ExbMHelp( "Opção BOX do campo invalida") //"Opção BOX do campo invalida"
	EndIf
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
//³ Fim do Metodo
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
Return
//-------------------------------------------------------------------
/*/ { Protheus.doc } GetFiles
Retorna todos os arquivo de uma pasta e subpastas

@author Alexander Santos
@since 09/03/11
@version 1.0
/*/
//-------------------------------------------------------------------
METHOD GetFiles(cDirPerf,aFiles) Class CABA790C
	LOCAL nI		:= 1
	LOCAL aFilDir	:= {}
	DEFAULT aFiles 	:= {}
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
//³ Retira espacos desnecessario
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
	cDirPerf := PLSMUDSIS( MsDocRmvBar(AllTrim(cDirPerf)) )
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
//³ Arquivos e diretorio da pasta informada
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
	aFilDir := Directory( cDirPerf + PLSMUDSIS("\*.*"), "D")
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
//³ Verifica se tem somente arquivo ou subpastas
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
	For nI:=1 To Len(aFilDir)
	
		If Left(aFilDir[nI,1],1) <> '.'
			If aFilDir[nI,5] == 'D'
			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
			//³ Processando a subpasta
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
				::GetFiles(cDirPerf + "\" + aFilDir[nI,1] + "\",aFiles)
			
			ElseIf At('excluido_',Lower(aFilDir[nI,1])) == 0
	    
				AaDd(aFiles, { aFilDir[nI,1] , PLSMUDSIS( cDirPerf + "\" ) } )
	    	
			EndIf
		EndIf
	
	Next
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
//³ Para ter um linha 
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
	If Len(aFiles)==0
		aFiles := { { "" , "" } }
	EndIf
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
//³ Fim do Metodo
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
Return(aFiles)
//-------------------------------------------------------------------
/*/ { Protheus.doc } GetDocBC
Alimenta e mostra registro selecionado no banco de conhecimento

@author Alexander Santos
@since 02/02/11
@version 1.0
/*/
//-------------------------------------------------------------------
METHOD GetDocBC(nAt,aFiles,cAlias,cUnico) Class CABA790C
	LOCAL aArea 	:= GetArea()
	LOCAL lRet		:= .T.
	LOCAL nH		:= 0
	LOCAL cDescri	:= ""
	LOCAL cChvUni	:= ""
	LOCAL cCodUsuDef:= "XXXXXX"
	LOCAL cFile		:= SubStr(aFiles[nAt,1],1,At('.',aFiles[nAt,1])-1 )
	LOCAL cDirFile 	:= aFiles[nAt,2]+aFiles[nAt,1]
	PRIVATE aRotina := {}

	If EMPTY(cFile)
		_Super:ExbMHelp("Não existe arquivos no monitor de documentos.")//"Não existe arquivos no monitor de documentos."
		Return
	EndIf

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
//³ Abre controle de semafoto
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
	If ( nH := PLSAbreSem("GetDocBC" + cFile + ".SMF",.F.) ) > 0
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
	//³Coloca banco de conhecimento na memoria 
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
		RegToMemory("ACB",.T.)
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
	//³Retorna o nome do arquivo
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
		SplitPath( cDirFile,,,@cDescri)
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
	//³Preenchimento do wizard
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
		lRet := MsDocWzGrv( cDirFile, cDescri, {}, {} )
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
	//³Monta Chave Unica
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
		If lRet
			If !Empty(cUnico)
				cChvUni := (cAlias)->&(cUnico)
				If Empty(cChvUni)
					_Super:ExbMHelp( "Chave informada para registro do banco de conhecimento invalida" ) //"Chave informada para registro do banco de conhecimento invalida"
					lRet := .F.
				EndIf
			Else
				_Super:ExbMHelp( "Informe chave unica para registro do banco de conhecimento" ) //"Informe chave unica para registro do banco de conhecimento"
				lRet := .F.
			EndIf
		EndIf
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
	//³Se tudo ok monta registro do banco de conhecimento
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

		If lRet
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
		//³ Grava registro de alteracao da aplicacao ou tabela
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
			oBX3 := PLSSTRUC():New("BX3")
			oBX3:SetlAltera(.T.)
			oBX3:SetValue("BX3_FILIAL", xFilial("BX3") )
			oBX3:SetValue("BX3_OPERAD", cCodUsuDef )
			oBX3:SetValue("BX3_ALIAS", cAlias )
			oBX3:SetValue("BX3_DATA", Date() )
			oBX3:SetValue("BX3_HORA", Time() )
			oBX3:SetValue("BX3_TIPO", '1' )
			oBX3:SetValue("BX3_ESTTRB", GetComputerName() )
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
		//³ Grava dados na base de dados
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
			If !oBX3:CRUD()
				oBX3:ExbMHelp( oBX3:GetErrorMessage(.T.) )
			EndIf
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
		//³ Atualiza registro de acesso do usuario corrente
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
			oBX3:SetValue("BX3_OPERAD", ::cOperad )
			oBX3:SetValue("BX3_TIPO", '0' )
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
		//³ Grava dados na base de dados
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
			If !oBX3:CRUD()
				oBX3:ExbMHelp( oBX3:GetErrorMessage(.T.) )
			EndIf
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
		//³ Destroy o modelo
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
			oBX3:Destroy()
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
		//³ Gravacao do registro caso nao existe
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
			oAC9 := PLSSTRUC():New("AC9",MODEL_OPERATION_INSERT,1)
			oAC9:SetValue("AC9_FILIAL", xFilial( "AC9") )
			oAC9:SetValue("AC9_FILENT", xFilial( cAlias ) )
			oAC9:SetValue("AC9_ENTIDA", cAlias )
			oAC9:SetValue("AC9_CODENT", cChvUni )
			oAC9:SetValue("AC9_CODOBJ", M->ACB_CODOBJ )
			oAC9:CRUD()
			oAC9:Destroy()
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
		//³ Se o acesso foi permitido exibi banco de conhecimento
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
			Aadd(aRotina,{"Conhecimento","MsDocument", 0 , 4}) //"Conhecimento"
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
		//³Banco de conhecimento
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
			lRet := MsDocument( cAlias, (cAlias)->( Recno() ),1)
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
		//³Exclui documento da lista
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
			If lRet
				::DelDocBC(nAt,aFiles)
			Else
			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
			//³ Deleta registro da acb de lixo
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
				DelAcbAc9(.T.)
			EndIf
		EndIf
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
	//³ Fecha Semaforo
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
		PLSFechaSem(nH,"GetDocBC" + cFile + ".SMF")
	Else
		_Super:ExbMHelp("Arquivo sendo usado por outro Monitor")//"Arquivo sendo usado por outro Monitor"
	EndIf
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
//³Restaura area
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

	RestArea( aArea )
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Fim da Rotina															 ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
Return NIL
//-------------------------------------------------------------------
/*/ { Protheus.doc } DelDocBC
Deleta arquivo da pasta de monitor de fax

@author Alexander Santos
@since 02/02/11
@version 1.0
/*/
//-------------------------------------------------------------------
METHOD DelDocBC(nAt,aFiles) Class CABA790C
	LOCAL nRenOk  := -1
	LOCAL cRename := aFiles[nAt,2] + 'excluido_' + aFiles[nAt,1]
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
//³ Retomeia pois a GetFiles nao pega arquivos com excluido_
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
	nRenOk := FRename(aFiles[nAt,2]+aFiles[nAt,1] , cRename )
	If nRenOk == -1
		_Super:ExbMHelp( "Não foi possivel excluir arquivo da lista" ) //"Não foi possivel excluir arquivo da lista"
	EndIf
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
//³ Fim da Rotina															 
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
Return NIL
//-------------------------------------------------------------------
/*/ { Protheus.doc } VldAplication
Retorna dados da guia posicionada

@author Alexander Santos
@since 02/02/11
@version 1.0
/*/
//-------------------------------------------------------------------
METHOD VldAplication() Class CABA790C
	LOCAL lRet := .T.
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
//³ Verifica se o operador tem acesso a rotina
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
	If !::lMonFax .And. !::lIncAno .And. !::lIncDem .And. !::lIntSau .And. !::lIncPar .And. !::lIncEnc
		_Super:ExbMHelp("Rotina disponível apenas para operador autorizado") //"Rotina disponível apenas para operador autorizado"
		lRet:= .F.
	EndIf
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
//³ Fim da Rotina															 
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
Return(lRet)
//-------------------------------------------------------------------
/*/ { Protheus.doc } SetOnlyVisible
Set se a rotina será somente em modo visual

@author Alexander Santos
@since 02/02/11
@version 1.0
/*/
//-------------------------------------------------------------------
METHOD SetOnlyVisible(lVisible) Class CABA790C
	::lVisible := lVisible
Return
//-------------------------------------------------------------------
/*/ { Protheus.doc } VldAcessoGui
Valida acesso a guia se o operador tem direito

@author Alexander Santos
@since 02/02/11            
@version 1.0
/*/
//-------------------------------------------------------------------
METHOD VldAcessoGui(lEmAnlise,lIncons,lAutori, lAudit, cAlias, lEvol) Class CABA790C
	LOCAL lRet			:= .T.
	LOCAL lForLib		:= .F.
	DEFAULT lEmAnlise	:= .T.
	DEFAULT lIncons	:= .F.
	DEFAULT lAutori	:= .F.
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
//³ Atualiza informacoes da classe
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

	::SetAtuPClass(lEvol)


//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
//³ Verifica se tem guia para ser analisada
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
	If !::lHaveGuia
		_Super:ExbMHelp( "Não existe guia para analise") //"Não existe guia para analise"
		lRet := .F.
	
	EndIf

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
//³ Se nao for da interna-saude
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
	If !::lIntSau .And. !::lInconsistente
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
	//³ Verifica se foi encaminhada e se o operador e do mesmo departamento
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
		If lRet .And. !::lHaveOwner .And. !::lThisDep
			_Super:ExbMHelp( "Somente o operador deste departamento tem acesso") //"Somente o operador deste departamento tem acesso"
			lRet := .F.
		EndIf
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
	//³ Verifica se a guia tem dono 
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
		If lRet .And. ::lHaveOwner .And. !::lOwner
		//Verifica se o usuário tem autorização para liberar guias bloqueadas por outros usuários e se não exibiu a mensagem 
			IF ::lLibGuia .and. !cPlMsgAud == B53->(B53_CODLDP+B53_CODPEG+B53_NUMERO)
				lForLib := MsgYesNo("A guia esta bloqueada para:" + UPPER(USRRETNAME(B53->B53_OPERAD)) + "Deseja mesmo liberar esta Guia?", "Tem autorização?") //A guia esta bloqueada para:/"Deseja mesmo liberar esta Guia?"
				cPlMsgAud := B53->(B53_CODLDP+B53_CODPEG+B53_NUMERO)
		//Verifica se o usuário tem autorização para liberar guias bloqueadas por outros usuários e se já exibiu a mensagem 
			ElseIf ::lLibGuia .and. cPlMsgAud == B53->(B53_CODLDP+B53_CODPEG+B53_NUMERO)
				lForLib := .T.
			EndIf
			IF (!lForLib)
				_Super:ExbMHelp( "Somente o operador desta guia tem acesso") //"Somente o operador desta guia tem acesso"
				lRet	:= .F.
			EndIf
		EndIf
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
	//³ Se esta ok 
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
		If lRet .And. lEmAnlise
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
		//³ Verfica se a guia esta em analise
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
			If !::lEmAnalise
		
				_Super:ExbMHelp( "A guia deve estar em analise") //"A guia deve estar em analise"
				lRet := .F.
			
			EndIf
		EndIf
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
	//³ Verifica se a guia esta autorizada
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
		If lRet .And. lAutori .And. ::lAutorizada .And. !::lEvolucao
			_Super:ExbMHelp( "Esta guia já esta autorizada!") //"Esta guia já esta autorizada!"
			lRet := .F.
		EndIf
	EndIf

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
//³ Verifica se o procedimento selecionado é de auditoria
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
	If !EMPTY(lAudit) .AND. lAudit
		If ::cAudito == "0"
			_Super:ExbMHelp("Este procedimento não possui critica para auditoria") //Este procedimento não possui critica para auditoria
			lRet := .F.
		EndIf
	EndIf

//ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
//³ Fim do Metodo
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
Return(lRet)
//-------------------------------------------------------------------
/*/ { Protheus.doc } SetAtuPClass
Seta valor nas proprioedades da classe

@author Alexander Santos
@since 02/02/11
@version 1.0
/*/
//-------------------------------------------------------------------
METHOD SetAtuPClass(lEvol) CLASS CABA790C

	DEFAULT lEvol := .F.
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
//³ Atualiza propriedades
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

	AtuPClass(Self, lEvol)

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
//³ Fim da Rotina
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
Return
//-------------------------------------------------------------------
/*/ { Protheus.doc } SetFieldGui
Ajusta campos conforme a guia

@author Alexander Santos
@since 02/02/11
@version 1.0
/*/
//-------------------------------------------------------------------
METHOD SetFieldGui(cCampo) Class CABA790C
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
//³Se for internacao ajusta campos
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
	Do Case
	Case ::lInternacao .Or. ::lEvolucao
		cCampo := StrTran(cCampo,'AUT','INT')
		cCampo := StrTran(cCampo,'OPEMOV','CODOPE')
	Case ::lOdonto
	Case ::lReembolso
	EndCase
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
//³Fim do Metodo
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
Return(cCampo)
//-------------------------------------------------------------------
/*/ { Protheus.doc } SetAuditoria
Cria o registro para auditoria por guia

@author Alexander Santos
@since 02/02/11
@version 1.0
/*/
//-------------------------------------------------------------------
METHOD SetAuditoria(lAuditoria,lIntern,lEvolu,lReembolso,lPartic,aDadCri,aCabCri,cCodCri,cRegInt,cAliasCri,aColsITE,aHeaderITE,cAliasIte,lOPME) Class CABA790C
	LOCAL nI			:= 1
	LOCAL cAlias 	 	:= "BEA"
	LOCAL cOpeMov   	:= ""
	LOCAL cCarInt   	:= ""
	LOCAL cNumAut		:= ""
	LOCAL cTipo		 	:= ""
	LOCAL cTpGuia	 	:= ""
	LOCAL cPerAud 		:= ""
	LOCAL cTipAdm		:= ""
	LOCAL cPriori		:= "0"
	LOCAL cOriMov		:= ""
	LOCAL cCodDep		:= ""
	LOCAL cCodMun 		:= ""
	LOCAL lAutorizacao 	:= .F.
	LOCAL lFutura		:= .F.
	LOCAL lDemand		:= .F.
	LOCAL aMat			:= {}
	LOCAL oGEN			:= NIL
	LOCAL oB53			:= NIL
	LOCAL nPosit 		:= 0
	LOCAL nNegat 		:= 0
	LOCAL oBE4			:= NIL
	LOCAL lGui			:= .F.
	LOCAL cChave		:= ""
	LOCAL lIntEvo		:= lIntern .Or. lEvolu
	LOCAL nPosGlo		:= 0
	DEFAULT aColsITE	:= {}
	DEFAULT aHeaderITE	:= {}
	DEFAULT cAliasIte	:= {}
	DEFAULT lOPME		:= .F.

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
//³ Verifica se esta habilitada a nova auditoria
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
	If GetNewPar("MV_PL790NE","0") == "0"
		Return
	EndIf
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
//³ Define Alias
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
	If lIntern .Or. lEvolu
		cAlias := "BE4"
		If lEvolu
			cAliasCri:="BQZ" //dEFAULT E TABELA BEG DE CRITICAS DA INTERNAÇÃO
		Endif
	ElseIf lReembolso
		cAlias := "B44"
	ElseIf lOPME
		cAlias := "B4A"
	EndIf
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
//³ Variaveis
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
	cOpeMov := Iif( lIntEvo,(cAlias)->&(cAlias+"_CODOPE"),(cAlias)->&(cAlias+"_OPEMOV") )
	cNumAut := cOpeMov + Iif( !lIntEvo,(cAlias)->( &(cAlias+"_ANOAUT")+&(cAlias+"_MESAUT")+&(cAlias+"_NUMAUT") ),(cAlias)->( &(cAlias+"_ANOINT")+&(cAlias+"_MESINT")+&(cAlias+"_NUMINT") ) )
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
//³ Municipio do local de atendimento
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

	If lOPME
	
		dbSelectArea("BID")
		BEA->(dbSetOrder(1) )
		BEA->( MsSeek( xFilial("BEA")+B4A->B4A_GUIREF))
		If BEA->(BEA_OPEMOV+BEA_ANOAUT+BEA_MESAUT+BEA_NUMAUT) == B4A->B4A_GUIREF
			If BB8->( MsSeek( xFilial("BB8")+ BEA->BEA_CODRDA+cOpeMov+ BEA->BEA_CODLOC+BEA->BEA_LOCAL) )
				cCodMun := BB8->BB8_CODMUN
			Else
				cCodMun := BID->BID_CODMUN
			Endif
		Else
			cCodMun := BID->BID_CODMUN
		Endif
	
	Else

		If BB8->( MsSeek( xFilial("BB8") + (cAlias)->&(cAlias+"_CODRDA") + cOpeMov + (cAlias)->&(cAlias+"_CODLOC") + (cAlias)->&(cAlias+"_LOCAL") ) )
			cCodMun := BB8->BB8_CODMUN
		EndIf
	EndIf

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
//³ Quando nao e reembolso
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
	If lEvolu .Or. lIntern
		cOriMov := BE4->BE4_ORIMOV
		cTpGuia := '3'
	ElseIf !lReembolso .And. !lOPME .And. (!lEvolu .Or. !lIntern)
		cOriMov := (cAlias)->&(cAlias+"_ORIMOV")
		cTpGuia := BEA->BEA_TIPO
	ElseIf lOPME
		cOriMov := '3'
		cTpGuia := '6'
	Else
		cOriMov := '3'
		cTpGuia := '5'
	EndIf
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
//³ Tipo de adimissao
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
	If (cAlias)->( FieldPos(cAlias+"_TIPADM") ) > 0
		cTipAdm := (cAlias)->&(cAlias+"_TIPADM")
	Else
		cTipAdm := GetNewPar("MV_PLSTPAD","6")
	EndIf
	cCarInt := Posicione("BDR",1,xFilial("BDR") + cOpeMov + cTipAdm,"BDR_CARINT")

	nPosGlo := PLRETPOS(cAliasCri + "_CODGLO",aCabCri)

	If nPosGlo > 0 .And. Len(aDadCri) >= nPosGlo
		lDemand := Ascan( aDadCri,{|x| x[nPosGlo] == cCodCri } ) > 0
	EndIf
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
//³ Alimenta o perfil de auditoria com base na critica						 
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
	For nI := 1 To Len(aDadCri)
		If nPosGlo > 0 .And. !Empty( aDadCri[ nI,nPosGlo ] )
	
			cTipo := Posicione("BCT",1,xFilial("BCT") + cOpeMov + aDadCri[ nI,nPosGlo ],"BCT_TIPO")
		
			If At(cTipo,cPerAud) == 0
				cPerAud += cTipo+";"
			EndIf
		EndIF
	Next
	cPerAud := Iif(Empty(cPerAud),"0;1;2;",cPerAud)
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
//³ Classificacao da prioridade
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

	If ExistBlock("PLSAUDPR") .And. lAuditoria
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
	//³ Dados enviado ao ponto de entrada 0=Baixa,1=Media,2=Alta
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ    
		lAutorizacao :=	Iif(BEA->BEA_ORIGEM == "1" .And. (!lEvolu .Or. !lIntern),.T.,.F. )

		If lIntEvo
			lFutura := (cAlias)->&(cAlias+"_PRVINT") > (cAlias)->&(cAlias+"_DTDIGI")
		ElseIf 	lReembolso
			lFutura := (cAlias)->&(cAlias+"_DATPRO") > (cAlias)->&(cAlias+"_DTDIGI")
		ElseIf 	lOPME
			lFutura := (cAlias)->&(cAlias+"_DATPRO") > (cAlias)->&(cAlias+"_DATSOL")
		Else
			lFutura := (cAlias)->&(cAlias+"_DATSOL") > (cAlias)->&(cAlias+"_DTDIGI")
		EndIf
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
	//³ Avaliacao do ponto de entrada
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
		cPriori := ExecBlock("PLSAUDPR",.F.,.F.,{cOriMov,cTipo,lAutorizacao,cCarInt,lFutura,lReembolso,lEvolu,lIntern } )
	EndIf
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
//³ Instancia o modelo de dados												 
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ 
	oB53 := PLSSTRUC():New("B53")

	If Existblock("PL790INIP")
		oB53 := ExecBlock("PL790INIP", .F., .F., {oB53} )
	Endif

	oB53:SetValue("B53_NUMGUI", cNumAut )
	oB53:SetValue("B53_ORIMOV", cOriMov )
	oB53:SetValue("B53_CODMUN", cCodMun )
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
//³ Tem que verificar se ja nao existe pois a evolucao vai inserir varios procedimento na mesma guia
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
	oGEN := CABREGIC():New()
	oGEN:GetDadReg("B53",1, xFilial("B53") + cNumAut + cOriMov )
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
//³ Se nao existir inseri
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
	If !oGEN:lFound
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
	//³ Chaves																	 
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
		oB53:SetValue("B53_FILIAL", xFilial(cAlias) )
		oB53:SetValue("B53_ALIMOV", cAlias )
		oB53:SetValue("B53_RECMOV", cValToChar( (cAlias)->( Recno() ) ) )
		oB53:SetValue("B53_CODOPE", cOpeMov )
		oB53:SetValue("B53_CODLDP", IIf(lOPME, "0000",(cAlias)->&(cAlias+"_CODLDP") ))
		oB53:SetValue("B53_CODPEG", IIf(lOPME,"00000000",(cAlias)->&(cAlias+"_CODPEG") ))
		oB53:SetValue("B53_NUMERO", Iif(lIntEvo,(cAlias)->&(cAlias+"_NUMERO"), Iif(lOPME, (cAlias)->&(cAlias+"_NUMAUT"),(cAlias)->&(cAlias+"_NUMGUI") ) ))
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
	//³ Campos restantes														 
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
		oB53:SetValue("B53_DATMOV", dDataBase )
		oB53:SetValue("B53_HORMOV", Left(Time(),5) )
		oB53:SetValue("B53_MATUSU", (cAlias)->( &(cAlias+"_OPEUSR")+&(cAlias+"_CODEMP")+&(cAlias+"_MATRIC")+&(cAlias+"_TIPREG")+&(cAlias+"_DIGITO") ) )
		oB53:SetValue("B53_NOMUSR", Posicione( "BA1",2,xFilial("BA1") + (cAlias)->( &(cAlias+"_OPEUSR")+&(cAlias+"_CODEMP")+&(cAlias+"_MATRIC")+&(cAlias+"_TIPREG")+&(cAlias+"_DIGITO") ) ,"BA1_NOMUSR" ) )
		oB53:SetValue("B53_DEMAND", Iif(lDemand,"1","0") )
		oB53:SetValue("B53_PARTIC", Iif(lPartic,"1","0") )
		oB53:SetValue("B53_STATUS", (cAlias)->&(cAlias+"_STATUS") )
		oB53:SetValue("B53_CARINT", cCarInt )
		oB53:SetValue("B53_PERAUD", cPerAud  )
		oB53:SetValue("B53_TIPO", cTpGuia )
		oB53:SetValue("B53_AGEPAR", "0" )
		oB53:SetValue("B53_SITUAC", "0" )
		oB53:SetValue("B53_BANCON", "0" )
		oB53:SetValue("B53_ENCAMI", "0" )
	
		If lOPME
		
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
		//³ Se for guia de anexos clinicos, o sistema busca a RDA da guia usada como
		//	referencia na guia de anexos.														 
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
			If !lGui
				BE4->(dbSetORder(2))
				lGui := BE4->(dbSeek(xFilial("BE4") + BE4->(BE4_CODOPE + BE4_ANOINT + BE4_MESINT + BE4_NUMINT)))
				cCRda := BE4->BE4_CODRDA
			EndIf
		
			If !lGui
				BE2->(dbSetORder(3))
				lGui := BE2->(dbSeek(xFilial("BE2") + BE2->(BE2_OPEMOV + BE2_ANOINT + BE2_MESINT + BE2_NUMINT)))
				cCRda := BE2->BE2_CODRDA
			EndIf
		
			If !lGui
				B44->(dbSetORder(1))
				B44->(dbSeek(xFilial("B44") + B44->(B44_OPEMOV + B44_ANOAUT + B44_MESAUT + B44_NUMAUT)))
				cCRda := B44->B44_CODRDA
			EndIf
		 
			oB53:SetValue("B53_CODRDA", cCRda )
		
		Else
			oB53:SetValue("B53_CODRDA", (cAlias)->&(cAlias+"_CODRDA") )
		EndIf
	
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
	//³ Grava o departamento quando for de demanda
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
		If lDemand
		
			oBX4 := CABREGIC():New()
			oBX4:GetDadReg("BX4" ,1, ( xFilial("BX4") + RETCODUSR() + PlsIntPad() ) )

			If oBX4:lFound
				cCodDep := oBX4:GetValue("BX4_CODDEP")
				oB53:SetValue("B53_CODDEP", cCodDep )
			EndIf
		                   
			oBX4:Destroy()
		Else
		// Ponto de entrada para personalizar a gravação do departamento. Valido somente se nao for demanda.
			If Existblock("PLSDEPTO")
				cCodDep := Execblock("PLSDEPTO", .f., .f., {cOriMov,cTipo,lAutorizacao,cCarInt,lFutura,lReembolso,lEvolu,lIntern,aDadCri,aCabCri,aColsITE,aHeaderITE,cAliasIte,cAliasCri,cRegInt,lPartic} )
				oB53:SetValue("B53_CODDEP", cCodDep)
			Endif
		EndIf
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
	//³ Não tenha sido informado pega do parametro XML POR EXEMPLO.
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
		If Empty(cCodDep)
			cCodDep := GetNewPar("MV_PL790DP","001")
		EndIf
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
	//³ Evolucao de Internacao
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
		oB53:SetValue("B53_PROINT", Iif(lEvolu,"1","0") )
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
	//³ Na internacao
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
		oB53:SetValue("B53_REGINT", cRegInt )
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
	//³ 0=Baixa;1=Media;2=Alta
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
		oB53:SetValue("B53_PRIORI", cPriori )
	
		If lEvolu
	
			cChave := BE4->(BE4_CODOPE+BE4_ANOINT+BE4_MESINT+BE4_NUMINT)

			BEJ->(dbSetOrder(1))
			If BEJ->(dbSeek(xFilial("BEJ") + cChave))

				While !BEJ->(EOF()) .AND. xFilial("BEJ")+BEJ->(BEJ_CODOPE+BEJ_ANOINT+BEJ_MESINT+BEJ_NUMINT) ==;
						xFilial("BEJ") + cChave
	
					If BEJ->BEJ_STATUS == '1'
						nPosit++
					Else
						nNegat++
					EndIf
					BEJ->(dbSkip())
				EndDo
			EndIf

			BQV->(dbSetOrder(1))
			If BQV->(dbSeek(xFilial("BQV") + cChave))

				While !BQV->(EOF()) .AND. xFilial("BQV")+BQV->(BQV_CODOPE+BQV_ANOINT+BQV_MESINT+BQV_NUMINT) ==;
						xFilial("BQV") + cChave

					If BQV->BQV_STATUS == '1'
						nPosit++
					Else
						nNegat++
					EndIf
					BQV->(dbSkip())
				EndDo
			EndIf
		
			oBE4 := PLSSTRUC():New( "BE4",4,,BE4->( Recno() ) )
		
			If nPosit == 0 .AND. nNegat > 0
				oBE4:SetValue("BE4_STATUS", "3")
				oB53:SetValue("B53_STATUS", "3")
				lAudEvo := .T.
			ElseIf nPosit > 0 .AND. nNegat > 0
				oBE4:SetValue("BE4_STATUS", "2")
				oB53:SetValue("B53_STATUS", "2")
				lAudEvo := .T.
			ElseIf nPosit > 0 .AND. nNegat == 0
				oBE4:SetValue("BE4_STATUS", "1")
				oB53:SetValue("B53_STATUS", "1")
			EndIf
		
			If !oBE4:CRUD()
				oBE4:ExbMHelp( oBE4:GetErrorMessage(.T.) )
			EndIf
			oBE4:Destroy()
		
		EndIf

	Else
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
	//³ Complementa o perfil
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
		aMat := _Super:Split(";", oGEN:GetValue("B53_PERAUD") )
		For nI:=1 To Len(aMat)
			If !Empty(aMat[nI]) .And. !(aMat[nI] $ cPerAud)
				cPerAud += aMat[nI]+";"
			EndIf
		Next
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
	//³ Se a guia ja foi analisada limpa o operador
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
		If oGEN:GetValue("B53_SITUAC") == "1"
			oB53:SetValue("B53_OPERAD", "" )
			oB53:SetValue("B53_SITUAC", "0" )
			oB53:SetValue("B53_DATINI", CToD("") )
			oB53:SetValue("B53_HORINI", "" )
			oB53:SetValue("B53_DATFIM", CToD("") )
			oB53:SetValue("B53_HORFIM", "" )
		EndIf
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
	//³ Campos que devem ser alterados
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
		oB53:SetlAltera(.T.)
		oB53:SetValue("B53_PERAUD", cPerAud )
		oB53:SetValue("B53_DEMAND", Iif(lDemand,"1","0") )
		oB53:SetValue("B53_PARTIC", Iif(lPartic,"1","0") )
		oB53:SetValue("B53_CARINT", cCarInt )
		oB53:SetValue("B53_PRIORI", cPriori )
		oB53:SetValue("B53_PROINT", Iif(lEvolu,"1","0") )
		oB53:SetValue("B53_SITUAC", "0" )
	
		If !EMPTY(oGEN:getValue("B53_DATFIM"))
			oB53:SetValue("B53_DATMOV", date() )
			oB53:SetValue("B53_HORMOV", SUBSTR(Time(), 1, 5) )
		EndIf
	
		If lEvolu
			BEJ->(dbSetOrder(1))
			If BEJ->(dbSeek(xFilial("BEJ")+B53->B53_NUMGUI))

				While !BEJ->(EOF()) .AND. xFilial("BEJ")+BEJ->(BEJ_CODOPE+BEJ_ANOINT+BEJ_MESINT+BEJ_NUMINT) ==;
						xFilial("BEJ")+B53->B53_NUMGUI
	
					If BEJ->BEJ_STATUS == '1'
						nPosit++
					Else
						nNegat++
					EndIf
					BEJ->(dbSkip())
				EndDo
			EndIf

			BQV->(dbSetOrder(1))
			If BQV->(dbSeek(xFilial("BQV")+B53->B53_NUMGUI))

				While !BQV->(EOF()) .AND. xFilial("BQV")+BQV->(BQV_CODOPE+BQV_ANOINT+BQV_MESINT+BQV_NUMINT) ==;
						xFilial("BQV")+B53->B53_NUMGUI

					If BQV->BQV_STATUS == '1'
						nPosit++
					Else
						nNegat++
					EndIf
					BQV->(dbSkip())
				EndDo
			EndIf
		EndIf

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
	//³ Cria o objeto para a atualizacao
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
	
		If lEvolu
			oBE4 := PLSSTRUC():New( "BE4",4,,BE4->( Recno() ) )
		
			If nPosit == 0 .AND. nNegat > 0
				oBE4:SetValue("BE4_STATUS", "3")
				oB53:SetValue("B53_STATUS", "3")
				lAudEvo := .T.
			ElseIf nPosit > 0 .AND. nNegat > 0
				oBE4:SetValue("BE4_STATUS", "2")
				oB53:SetValue("B53_STATUS", "2")
				lAudEvo := .T.
			ElseIf nPosit > 0 .AND. nNegat == 0
				oBE4:SetValue("BE4_STATUS", "1")
				oB53:SetValue("B53_STATUS", "1")
			EndIf
		
		EndIf
	
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
	//³ Grava dados na base de dados											 
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
		If lEvolu
			If !oBE4:CRUD()
				oBE4:ExbMHelp( oBE4:GetErrorMessage(.T.) )
			EndIf
			oBE4:Destroy()
		EndIf

	EndIf

	If !oB53:CRUD()
		oB53:ExbMHelp( oB53:GetErrorMessage(.T.) )
	EndIf

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
//³ Destroy a Classe
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
	oB53:Destroy()
	oGEN:Destroy()
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
//³Fim do Metodo
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
Return
//-------------------------------------------------------------------
/*/ { Protheus.doc } EMail
Envia email

@author Alexander Santos
@since 02/02/11
@version 1.0
/*/
//-------------------------------------------------------------------
METHOD EMail() Class CABA790C
	LOCAL aArea	:= GetArea()
	LOCAL lRet		:= .F.
	LOCAL cTo		:= ""
	LOCAL cFrom 	:= ""
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
//³ Verifica dados do usuario de envio
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ 
	PswOrder(2)
	cFrom := UsrRetMail(RetCodUsr())//AllTrim(PswRet(1)[1][14])

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
//³ Verifica dados do usuario destinatario
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ 
	cTo := UsrRetMail(B70->B70_COPAGE)//AllTrim(PswRet(1)[1][14])

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
//³ Verifica se tem e-mail
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ 
	If Empty(cFrom)
		_Super:ExbMHelp( "E-MAIL não informado para o Remetente" ) //"E-MAIL não informado para o Remetente"
		Return
	EndIf

	If Empty(cTo)
		_Super:ExbMHelp( "E-MAIL não informado para o Destinatário" ) //"E-MAIL não informado para o Destinatário"
		Return
	EndIf

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
//³ Dados enviado ao destinatario
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ 
	cBeneficiario 	:= AllTrim(B53->B53_MATUSU + " - " + Posicione("BA1",2,xFilial("BA1")+B53->B53_MATUSU,"BA1->BA1_NOMUSR"))
	cNumGui			:= AllTrim(B53->B53_NUMGUI)
	cRda			:= AllTrim(B53->B53_CODRDA + " - " + Posicione("BAU",1,xFilial("BAU")+B53->B53_CODRDA,"BAU->BAU_NOME"))
	cDHRea			:= AllTrim(DToC(B70->B70_DATREA) + " - " + B70->B70_HORREA)
	cDHAge			:= AllTrim(DToC(B70->B70_DATAGE) + " - " + B70->B70_HORAGE)
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
//³ Verifica se o usuario de e para tem email
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ 
	If !Empty(cFrom) .And. !Empty(cTo)
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
    //³Monta o corpo do e-mail												   
    //ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
		cBody := "<html>"
		cBody += "<style type='text/css'><!--"
		cBody += ".texto {"
		cBody += "	font-family: Arial, Helvetica, sans-serif;font-size: 12px;"
		cBody += "	color: #333333;text-decoration: none;font-weight: normal;"
		cBody += "}"
		cBody += ".titulo {"
		cBody += "	font-family: Arial, Helvetica, sans-serif;font-size: 16px;"
		cBody += "	color: #19167D;text-decoration: none;font-weight: bold;"
		cBody += "}"
		cBody += "--></style>"

		cBody += "<body>"
		cBody += "<table width='400' height='60' border='0' cellpadding='0' cellspacing='0'>"
		cBody += "<tr class='titulo'>"
		cBody += "<td height='10'>"
		cBody += "	<strong><font size='4'>Auditoria Participativa - Agendamento</font></strong>"
		cBody += "<td>"
		cBody += "</tr>"
		cBody += "<tr><td><br></td></tr>"
		cBody += "<tr>"
		cBody += "<td height='30'>"
		cBody += "<table>"
		cBody += "	<tr class='texto'>"
		cBody += "		<td width='130' align='Right'><strong>Beneficiario:</strong></td>"
		cBody += "		<td>"+cBeneficiario+"</td>"
		cBody += "	</tr>"

		cBody += "	<tr class='texto'>"
		cBody += "		<td width='130' align='Right'><strong>Rede de Atendimento:</strong></td>"
		cBody += "		<td>"+cRda+"</td>"
		cBody += "	</tr>"
	 
		cBody += "	<tr class='texto'>"
		cBody += "		<td width='130' align='Right'><strong>Numero da Guia:</strong></td>"
		cBody += "		<td>"+cNumGui+"</td>"
		cBody += "	</tr>"
	
		cBody += "	<tr class='texto'>"
		cBody += "		<td width='130' align='Right'><strong>Realização:</strong></td>"
		cBody += "		<td>"+cDHRea+"</td>"
		cBody += "	</tr>"
	
		cBody += "	<tr class='texto'>"
		cBody += "		<td width='130' align='Right'><strong>Agendamento:</strong></td>"
		cBody += "		<td>"+cDHAge+"</td>"
		cBody += "	</tr>"
		cBody += "</table>"
		cBody += "</td>"
		cBody += "</tr>"
		cBody += "</table>"
		cBody += "</body>"
		cBody += "</html>"
    //ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
    //³Envia email
    //ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
		::SendEmail(cFrom,cTo,,,"Agendamento de Visita",cBody) //"Agendamento de Visita"
    //ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
    //³Verifica se teve erro
    //ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
		_Super:ExbMHelp( ::cErro )
		lRet := .T.
	Else
		_Super:ExbMHelp( "E-MAIL não encontrado" ) //"E-MAIL não encontrado"
		lRet := .F.
	EndIf
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
//³ Rest nas linhas do browse e na area										 
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
	RestArea( aArea )
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
//³Fim do Metodo
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
Return(lRet)
//-------------------------------------------------------------------
/*/ { Protheus.doc } NegComp
Nega participacao do item

@author Alexander Santos
@since 02/02/11
@version 1.0
/*/
//-------------------------------------------------------------------
METHOD NegComp() Class CABA790C
	LOCAL cSequen := (::cAIte)->&(::cAIte + "_SEQUEN")
	LOCAL cCodPad := (::cAIte)->&(::cAIte + "_CODPAD")
	LOCAL cCodPro := (::cAIte)->&(::cAIte + "_CODPRO")
	LOCAL cStatus := (::cAIte)->&(::cAIte + "_STATUS")
	LOCAL dDatPro := (::cAIte)->&(::cAIte + "_DATPRO")
	LOCAL cCodRda := B53->B53_CODRDA
	LOCAL cMatric := B53->B53_MATUSU
	LOCAL cChave  := xFilial("B53") + B53->( B53_CODOPE + B53_CODLDP + B53_CODPEG + B53_NUMERO + B53_ORIMOV ) + cSequen
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
//³ Nega ou autoriza a participacao
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
	PLSNACOM(cSequen,cCodPad,cCodPro,cStatus,dDatPro,,cChave,cCodRDA,.T.,cMatric)
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
//³ Fim da Rotina															 
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
Return
//-------------------------------------------------------------------
/*/ { Protheus.doc } NegComp
Nega participacao do item

@author Alexander Santos
@since 02/02/11
@version 1.0
/*/
//-------------------------------------------------------------------
METHOD SetDemanda() Class CABA790C
	LOCAL B53 := NIL
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
//³ Atualiza para demanda
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
	B53 := PLSSTRUC():New( "B53",4,,B53->( Recno() ) )
	B53:SetValue("B53_DEMAND",'1' )
	B53:CRUD()
	B53:Destroy()
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
//³ Fim da Rotina															 
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
Return
//-------------------------------------------------------------------
/*/ { Protheus.doc } Destroy
Libera da memoria o obj (Destroy)

@author Alexander Santos
@since 02/02/11
@version 1.0
/*/
//-------------------------------------------------------------------
METHOD Destroy() Class CABA790C
	FreeObj(Self)
Return
/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±±
±±³Funcao    ³AtuPClass ³ Autor ³ Totvs				    ³ Data ³ 17/03/11 ³±±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±±
±±³Descricao ³ Atualiza propriedades da Classe	  						  ³±±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Static Function AtuPClass(oSelf, lEvol)
	LOCAL aRet 	:= {}

	Iif(lEvol,lEvo := .T.,Nil)

//Operador Corrente
	oSelf:cOperad := RETCODUSR()

//Dados do operador
	RetDadOpe(oSelf)

//Informacoes da guia
	
//Informacoes da guia
	oSelf:lEmAnalise		:= B53->B53_SITUAC=='2'
	oSelf:lEspera  	 		:= B53->B53_SITUAC=='3'
	oSelf:lAnalisada 		:= Iif(B53->B53_SITUAC=='1',.T.,.F.)
	oSelf:lInconsistente	:= Iif(B53->B53_SITUAC=='4',.T.,.F.)
	oSelf:lIncoRes			:= Iif(B53->B53_SITUAC=='4' .And. B72->B72_INCONS == '1',.T.,.F.)
	oSelf:lNotInRes			:= Iif(B53->B53_SITUAC=='4' .And. B72->( Eof() ),.T.,.F.)
	oSelf:lAutorizada   	:= Iif(B53->B53_STATUS=='1',.T.,.F.)
	oSelf:lParticipativa	:= Iif(B53->B53_PARTIC=='1',.T.,.F.)
	oSelf:lAgendada     	:= Iif(B53->B53_AGEPAR=='1',.T.,.F.)
	oSelf:lDemanda			:= Iif(B53->B53_DEMAND=='1',.T.,.F.)
	oSelf:lHaveOwner 		:= !Empty(B53->B53_OPERAD)
	oSelf:lOwner 			:= B53->B53_OPERAD==oSelf:cOperad
	oSelf:lThisDep 			:= Empty(B53->B53_CODDEP) .Or. B53->B53_CODDEP==oSelf:cCodDep
	oSelf:cOwner			:= B53->B53_OPERAD
	oSelf:lHaveGuia  		:= !Empty(B53->B53_NUMGUI)
	oSelf:cNumGuia  		:= B53->B53_NUMGUI
	oSelf:cCodDepa			:= oSelf:cCodDep //[r7]
	//oSelf:lRotinaGen		:= IIF(B53->B53_ROTGEN == "1", .T., .F.)
	oSelf:cAllPerfil		:= B53->B53_PERAUD
	oSelf:lConsulta     	:= AllTrim(B53->B53_TIPO)=='1'
	oSelf:lSadt				:= AllTrim(B53->B53_TIPO)=='2'
	oSelf:lInternacao		:= AllTrim(B53->B53_TIPO)=='3'
	oSelf:lOdonto			:= AllTrim(B53->B53_TIPO)=='4'
	oSelf:lReembolso		:= AllTrim(B53->B53_TIPO)=='5'
	oSelf:lOPME				:= AllTrim(B53->B53_TIPO)=='6'
	oSelf:lProrrog			:= AllTrim(B53->B53_TIPO)=='11'
	oSelf:lEvolucao 		:= lEvo
	oSelf:lCriDia			:= (AllTrim(B53->B53_TIPO)=='3' .or. AllTrim(B53->B53_TIPO)=='11') .and. u_CAB790VDIA(B53->B53_NUMGUI, AllTrim(B53->B53_TIPO))
	oSelf:cACab				:= B53->B53_ALIMOV
	aRet 					:= RetAliRel(oSelf)
	oSelf:cAIte				:= aRet[1]
	oSelf:cACri				:= aRet[2]
	oSelf:nIdxIte			:= aRet[3]
	oSelf:nIdxCri  			:= aRet[4]
	oSelf:cAudito 			:= RetAudito(oSelf)

Return
/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±±
±±³Funcao    ³RetDadOpe ³ Autor ³ Totvs			    	³ Data ³ 17/03/11 ³±±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±±
±±³Descricao ³ Atualiza propriedades da Classe	  						  ³±±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Static Function RetDadOpe(oSelf)
	LOCAL nPos := 0
	LOCAL aRet := {}
	LOCAL oBX4 := CABREGIC():New()
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
//³ Acesso ao registro
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
	oBX4:GetDadReg("BX4" ,1, ( xFilial("BX4") + oSelf:cOperad + PlsIntPad() ) )
	oSelf:cDesPerf := ""
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
//³ Se existe
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
	If oBX4:lFound
		oSelf:cPerfil := oBX4:GetValue("BX4_PERAUD")
		oSelf:cDirFax := oBX4:GetValue("BX4_DIRDOC")
	
		aRet := RetSx3Box( X3CBox( Posicione('SX3',2,"BX4_PERAUD",'X3_CBOX') ),,,1 )
	
		If (nPos := AsCan( aRet , {|x| AllTrim(x[2]) == oSelf:cPerfil} ) ) > 0
			oSelf:cDesPerf := aRet[nPos,3]
		EndIf
	EndIf
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
//³ Verifica se pode incluir processo de demanda
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
	oSelf:cCodDep 	:= oBX4:GetValue("BX4_CODDEP")
	oSelf:lLibGuia	:= IIf( BX4->(FieldPos('BX4_LIBGUI')) > 0, oBX4:GetValue("BX4_LIBGUI") == "1", .F. )
	oSelf:lIncDem 	:= oBX4:GetValue("BX4_PROCES") == "1"
	oSelf:lIncPar 	:= oBX4:GetValue("BX4_PARTIC") == "1"
	oSelf:lIncEnc 	:= oBX4:GetValue("BX4_ENCMIN") == "1"
	oSelf:lIntSau 	:= oBX4:GetValue("BX4_INTSAU") == "1"
	oSelf:lIncAno	:= oBX4:GetValue("BX4_ANOTAC") == "1"
	oSelf:lMonFax 	:= oBX4:GetValue("BX4_MOTDOC") == "1"
	oSelf:lVisAud 	:= oBX4:GetValue("BX4_VISAUD") == "1"
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
//³ Fim da rotina
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
	oBX4:Destroy()
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
//³ Fim da rotina
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
Return
/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±±
±±³Funcao    ³RetAliRel ³ Autor ³ Totvs			    	³ Data ³ 17/03/11 ³±±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±±
±±³Descricao ³ Retorna os alias relacionado como alias informado          ³±±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Static Function RetAliRel(oSelf)
	LOCAL aRet := {"","",1,1}
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
//³ Verifica o alias selecionado {Item,Critica,IdxItem,IdxCritica}
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
	Do Case
	Case oSelf:lSadt .Or. oSelf:lConsulta
		aRet := {"BE2","BEG",1,1}
	Case oSelf:lInternacao .And. !oSelf:lEvolucao
		aRet := {"BEJ","BEL",1,1}
	Case oSelf:lEvolucao
		aRet := {"BQV","BQZ",1,1}
	Case oSelf:lOdonto
		aRet := {"BE2","BEG",1,1}
	Case oSelf:lReembolso
		aRet := {"B45","B46",1,1}
	Case oSelf:lOPME
		aRet := {"B4C","BEG",1,1}
	Case oSelf:lPRORROG
		aRet := {"B4Q","BQZ",1,1}	
	EndCase
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
//³ Fim do Rotina
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
Return(aRet)
/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±±
±±³Funcao    ³DelAcbAc9 ³ Autor ³ Totvs			    	³ Data ³ 17/03/11 ³±±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±±
±±³Descricao ³ Verifica se ficou alguma sujeito na acb quando fecha a tela³±±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Static Function DelAcbAc9(lExcAC9)
	LOCAL oAC9 		:= NIL
	LOCAL oACB 		:= NIL
	DEFAULT lExcAC9 := .F.
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
//³ Elimina lixo da acb
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
	If !lExcAC9
		If !ACB->( Eof() )
			oAC9 := CABREGIC():New()
			oAC9:GetDadReg( "AC9",1, xFilial("AC9") + ACB->ACB_CODOBJ,,,.F. )
	
			If !oAC9:lFound
			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
			//³ Deleta arquivo movido para pasta do banco de conhecimento
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
				If FErase(MsDocPath()+"\"+ACB->ACB_OBJETO) == -1
					QOut("Impossivel deletar arquivo gerado no banco de conhecimento ["+MsDocPath()+"\"+ACB->ACB_OBJETO+"]") //"Impossivel deletar arquivo gerado no banco de conhecimento ["
				EndIf
			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
			//³ Delete o lixo que foi gravado na acb
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
				oACB := PLSSTRUC():New( "ACB",MODEL_OPERATION_DELETE,,ACB->(Recno()))
				oACB:CRUD()
			
				oACB:Destroy()
				oAC9:Destroy()
			EndIf
		EndIf
	Else
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
	//³ Deleta arquivo movido para pasta do banco de conhecimento
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
		If FErase(MsDocPath()+"\"+ACB->ACB_OBJETO) == -1
			QOut("Impossivel deletar arquivo gerado no banco de conhecimento ["+MsDocPath()+"\"+ACB->ACB_OBJETO+"]") //"Impossivel deletar arquivo gerado no banco de conhecimento ["
		EndIf
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
	//³ Delete o lixo que foi gravado na acb
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
		oACB := PLSSTRUC():New( "ACB",MODEL_OPERATION_DELETE,,ACB->( Recno() ) )
		oACB:CRUD()
		oACB:Destroy()
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
	//³ Delete o lixo que foi gravado na acb
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
		oAC9 := PLSSTRUC():New( "AC9",MODEL_OPERATION_DELETE,,AC9->( Recno() ) )
		oAC9:CRUD()
		oAC9:Destroy()
	EndIf
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
//³ Fim do Rotina
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
Return

/*/ { Protheus.doc } ProcPart
Informa para o auditor que o procedimento é participativo, 
caso exista registro criado no folder participativo

@author Alexander Santos
@since 02/02/11
@version 1.0
/*/
//-------------------------------------------------------------------
METHOD ProcPart() Class CABA790C

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
//³ Objeto que verifica e retorna se existe alguma participativa criada no folder
//  participativa
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
	oB70 := CABREGIC():New()
	oB70:GetDadReg("B70",1, xFilial("B70") + B53->(B53_ALIMOV+B53_RECMOV),,,.T. )

	If B53->B53_TIPO == "2" // Liberação/ Lib. Odonto/ Aurotização SADT e Odonto.

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
//³ Verifica se o procedimento que esta sendo auditado é participativo
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
		If BE2->BE2_PARTIC == "1"
		
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
		//³ Se existir registro na pasta participativa relacionado ao procedimento e
		//  ainda não foi realizado a confirmação
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
			If oB70:lFound .AND. oB70:GetValue("B70_RELCON") == "0"
				_Super:ExbMHelp("")
			EndIf
		EndIf

	ElseIf B53->B53_TIPO == "3" // Internação

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
//³ Verifica se o procedimento que esta sendo auditado é participativo
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ	
		If BEJ->BEJ_PARTIC == "1"
		
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
		//³ Se existir registro na pasta participativa relacionado ao procedimento e
		//  ainda não foi realizado a confirmação
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
			If oB70:lFound .AND. oB70:GetValue("B70_RELCON") == "0"
				_Super:ExbMHelp("")
			EndIf
		EndIf
	
	ElseIf B53->B53_TIPO == "5" // Reembolso

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
//³ Verifica se o procedimento que esta sendo auditado é participativo
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ	
		If B45->B45_PARTIC == "1"
		
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
		//³ Se existir registro na pasta participativa relacionado ao procedimento e
		//  ainda não foi realizado a confirmação
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
			If oB70:lFound .AND. oB70:GetValue("B70_RELCON") == "0"
				_Super:ExbMHelp("")
			EndIf
		EndIf
	EndIf

Return

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±±
±±³Funcao    ³CABA790C  ³ Autor ³ Totvs				    ³ Data ³ 30/03/10 ³±±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±±
±±³Descricao ³ Somente para compilar a class							  ³±±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
User Function CABA790C
Return


/*/{Protheus.doc} RetAudito
Retorna se a guia esta em auditoria.
@author victor.silva
@since 17/10/2016
@return caracter, Status da guia
/*/
static function RetAudito(oSelf)
	local cAliGui	:= oSelf:cACab
	local cAliEve	:= oSelf:cAIte
	local cNumGuia	:= oSelf:cNumGuia
	local cChave	:= ""
	local cAudito	:= "0"
	local aArea		:= {}
	local oReg 		:= CABREGIC():New()
	local nIdx		:= 1
	Local cAlias1   := GetNextAlias()

//Verifica se o alias esta preenchido
	if Empty(cAliGui)
		return cAudito
	endif

//Inicializa a chave
	cChave	:= xFilial(cAliGui) + cNumGuia

//Salva area
	aArea	:= (cAliGui)->(GetArea())

//Se o item nao estiver posicionado, procura no cabecalho da guia
	if !lEvo

	//Se for internacao utiliza o indice 2
		if oSelf:lInternacao
			nIdx := 2
		endif
	
		oReg:GetDadReg(cAliGui,nIdx,cChave,,,.T.)

	//Retorna o valor
		if oReg:lFound
		
		// Devido o padrão alterar o campo BE4_AUDITO de forma errada, foi necessário a correção abaixo.
			cCodOpe := subStr(B53->B53_NUMGUI,1,TamSx3("BEL_CODOPE")[1])
			cAnoInt := subStr(B53->B53_NUMGUI,TamSx3("BEL_CODOPE")[1]+1,TamSx3("BEL_ANOINT")[1])
			cMesInt := subStr(B53->B53_NUMGUI,TamSx3("BEL_CODOPE")[1]+TamSx3("BEL_ANOINT")[1]+1,TamSx3("BEL_MESINT")[1])
			cNumInt := subStr(B53->B53_NUMGUI,TamSx3("BEL_CODOPE")[1]+TamSx3("BEL_ANOINT")[1]+TamSx3("BEL_MESINT")[1]+1,TamSx3("BEL_NUMINT")[1])
		
			BeginSql alias cAlias1
		
				
				SELECT count(BEL_CODOPE)  CONT
				FROM %table:BEL%
				WHERE
				BEL_NUMINT = %Exp:cNumInt%
				AND BEL_ANOINT = %Exp:cAnoInt%
				AND BEL_MESINT = %Exp:cMesInt%
				AND BEL_CODOPE = %Exp:cCodOpe%
				AND D_E_L_E_T_ = ' '
							
			EndSql
	
			If (cAlias1)->CONT > 0
			
				cAudito := oReg:GetValue(cAliGui + "_AUDITO")
			
				if cAudito == '0'
					oReg:SetValue(cAliGui + "_AUDITO",'1')
				Endif
			
			Endif
		
			If select(cAlias1) > 0
				dbselectarea(cAlias1)
				dbclosearea()
			endif
		
			cAudito := oReg:GetValue(cAliGui + "_AUDITO")
		
		endif

//Senao, pega direto do item
	else

	//Salva area
		aArea	:= (cAliEve)->(GetArea())
	
	//Monta a estrutura do registro 
		oReg:GetDadReg(cAliEve,,,(cAliEve)->(RecNo()),,.T.)
	
	//Retorna o valor
		if oReg:lFound
		
		// Devido o padrão alterar o campo BE4_AUDITO de forma errada, foi necessário a correção abaixo.
			cCodOpe := subStr(B53->B53_NUMGUI,1,TamSx3("BEL_CODOPE")[1])
			cAnoInt := subStr(B53->B53_NUMGUI,TamSx3("BEL_CODOPE")[1]+1,TamSx3("BEL_ANOINT")[1])
			cMesInt := subStr(B53->B53_NUMGUI,TamSx3("BEL_CODOPE")[1]+TamSx3("BEL_ANOINT")[1]+1,TamSx3("BEL_MESINT")[1])
			cNumInt := subStr(B53->B53_NUMGUI,TamSx3("BEL_CODOPE")[1]+TamSx3("BEL_ANOINT")[1]+TamSx3("BEL_MESINT")[1]+1,TamSx3("BEL_NUMINT")[1])
		
			BeginSql alias cAlias1
					
				SELECT count(BQZ_CODOPE)  CONT
				FROM %table:BQZ%
				WHERE
				BQZ_NUMINT = %Exp:cNumInt%
				AND BQZ_ANOINT = %Exp:cAnoInt%
				AND BQZ_MESINT = %Exp:cMesInt%
				AND BQZ_CODOPE = %Exp:cCodOpe%
				AND D_E_L_E_T_ = ' '
							
			EndSql
	
			If (cAlias1)->CONT > 0
			
				cAudito := oReg:GetValue(cAliEve + "_AUDITO")
			
				if cAudito == '0'
					oReg:SetValue(cAliEve + "_AUDITO",'1')
					
				Endif
				
				
				cQuery := "update "+RetSqlName("BQZ")+" SET BQZ_PENDEN = '1' "
				cQuery += " WHERE
				cQuery += " BQZ_NUMINT = '"+cNumInt+"'"
				cQuery += " AND BQZ_ANOINT = '"+cAnoInt+"'"
				cQuery += " AND BQZ_MESINT = '"+cMesInt+"'"
				cQuery += " AND BQZ_CODOPE = '"+cCodOpe+"'"
				cQuery += " AND D_E_L_E_T_ = ' '            "
					
				TCsQLeXEC(cQuery)
			
			Endif
		
			If select(cAlias1) > 0
				dbselectarea(cAlias1)
				dbclosearea()
			endif
			
			cAudito := oReg:GetValue(cAliEve + "_AUDITO")
		
		endif
	
	endif

//Destroi o objeto
	oReg:Destroy()

//Restaura a area
	RestArea(aArea)

return cAudito
