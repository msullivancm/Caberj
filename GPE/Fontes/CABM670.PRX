#INCLUDE "FIVEWIN.CH"
#INCLUDE "GPEM670.CH"
#INCLUDE "FWADAPTEREAI.CH"

Static lGp670Arr	:= ExistBlock( "GP670ARR" )
Static lGpm670Fim	:= ExistBlock( "GPM670FIM" )
Static lGpm670Val 	:= ExistBlock( "GPM670VAL" )
Static __aRotErr	:= {}

// Utilizando os Parametros 2 e 3 igual a .T. na funcao ExistBlock liberam o PE para Serie 3
//					   ExistBlock(  cBlock	  , lLocaliz, lForced )
Static lGp670Cpo	:= ExistBlock( "GP670CPO", .T., .T. )

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³ GPEM670  ³ Autor ³ Emerson Rosa de Souza   ³ Data ³     13.08.01     ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Grava os titulos contidos no RC1 no SE2                  	        ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe   ³ fGeraSE2	    			                                            ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ 				        			                                    ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³                                                                      ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³         ATUALIZACOES SOFRIDAS DESDE A CONSTRU€AO INICIAL.                       ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Programador  ³ Data     ³ FNC          ³  Motivo da Alteracao                    ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Cecilia H Y  ³15/05/2013³M12RH01       ³Unificacao da Folha de Pagamento.        ³±±
±±³Flavio Correa³07/05/2014³TPKHR3        ³Replica V11 Titulo Externo			    ³±±
±±³Alberto M    ³19/08/2014³TPXWQ2        ³Inclusao do campo de Cod. Retencao para  ³±±
±±              ³          ³              ³geracao de titulo e integr. c/Financeiro.³±±
±±³Esther V.    ³30/05/2016³TVFY37        ³Ajuste na validacao de acesso de filiais	³±±
±±³             ³          ³              ³do usuario.								³±±
±±³Gabriel A.   ³05/08/2016³TVTET1        ³Alterado campo E2_FILORIG no momento da  ³±±
±±³             ³          ³              ³integração.                              ³±±
±±³Oswaldo L.   ³01/02/2017³MRH5505       ³Trativa para que o sistema apenas utiliz ³±±
±±³             ³          ³              ³os campos de acordo com o pais conectado ³±±
±±³M. Silveira  ³16/05/2017³DRHPONTP-24   ³Inclusao da integracao com  oCMNET com a ³±±
±±³             ³          ³              ³chamada da rotina GPEM671.               ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
User Function CABM670()
	Local nOpca 	   := 0
	Local aSays 	   := {}
	Local aButtons 	:= {}
	Local cPerg		:= If(nModulo == 64,"APTINT","GPM670")
	Local lIntCMNET := SuperGetMV("MV_ERPCM",,.F.)
	
	Private lAbortPrint := .F.
	Private lMsFinalAuto:= .T.
	
	Private cCadastro   := OemToAnsi(STR0001) //"Integracao de Titulos com o financeiro"
	
	//Se existe integracao com CMNET utiliza rotina especifica
	If lIntCMNET
		GPEM671()
		Return( NIL )
	EndIf
	
	Pergunte(cPerg,.F.)
	
	AADD(aSays,OemToAnsi( STR0002))  //"Sera iniciado o processo de integracao de titulos com o financeiro.           "
	AADD(aSays,OemToAnsi( STR0003))  //"Os titulos disponiveis para a integracao sao aqueles identificados como NAO   "
	AADD(aSays,OemToAnsi( STR0004))  //"LIBERADOS no cadastro de movimentos. Apos este processo, os titulos serao     "
	AADD(aSays,OemToAnsi( STR0005))  //"apresentados como LIBERADOS (Sao titulos integrados) ou INCONSISTENTES        "
	AADD(aSays,OemToAnsi( STR0006))  //"(Sao titulos com problemas na integracao). A manutencao dos titulos LIBERADOS,"
	AADD(aSays,OemToAnsi( STR0007))  //"somente podera ser efetuadas atraves do modulo financeiro SIGAFIN.            "
	
	AADD(aButtons, { 5,.T.,{|o| Pergunte(cPerg,.T. ) } } )
	AADD(aButtons, { 1,.T.,{|o| nOpca := 1, If(GPM670OK(),FechaBatch(), nOpca:=0 ) }} )
	AADD(aButtons, { 2,.T.,{|o| FechaBatch() }} )
	
	FormBatch( cCadastro, aSays, aButtons )
	
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Variaveis utilizadas para parametros                         ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If nOpca == 1
		ProcGpe({|lEnd| GPM670Proc()})  // Chamada do Processamento
	Endif
	
Return Nil

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³GPM670Proc³ Autor ³ Emerson Rosa de Souza ³ Data ³ 13.08.01 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Grava os titulos contidos no RC1 no SE2   		            ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe   ³ GPM670Proc    			                                     ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ 							                                        ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³                                                            ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß/*/
Static Function GPM670Proc()
	Local aArea     	:= GetArea()
	Local aThreads		:= {}
	Local aLogErro		:= {}
	Local aLogAuto		:= {}
	Local cAliasQry		:= ""
	Local cNomArqErro	:= ""
	Local cNomNovArq	:= ""
	Local cFilAux  		:= cFilAnt
	Local lThreads 		:= .F.
	Local lRotErro		:= .F.
	Local cRotErro		:= "N"
	Local nX
	Local nY
	Local nLoop	   		:= 0
	Local nLoops   		:= 0
	Local nRegsOk		:= 1
	Local nRegsAux		:= 0
	Local nRotFim		:= 0
	Local uThread  		:= Nil
	
	Private nContaLj	:= 0
	Private cLogLj		:= OemToAnsi(STR0010)
	Private aLogLJ		:= {}
	Private nContErro 	:= 0
	Private nQtdRC1		:= 0
	
	/*BEGINDOC
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³Existem 2 grupos de perguntas especificos:³
	//³1) para o SIGAGPE                         ³
	//³2) para o SIGAAPT                         ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
ENDDOC*/
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ mv_par01  - Filial De            (Nao utilizado no SIGAAPT)  ³
//³ mv_par02  - Filial Ate           (Nao utilizado no SIGAAPT)  ³
//³ mv_par03  - Cod. do Titulo De    (Nao utilizado no SIGAAPT)  ³
//³ mv_par04  - Cod. do Titulo Ate   (Nao utilizado no SIGAAPT)  ³
//³ mv_par05  - Nro do Titulo De 				                     ³
//³ mv_par06  - Nro do Titulo Ate				                     ³
//³ mv_par07  - Data Vencimento De    				               ³
//³ mv_par08  - Data Vencimento Ate    				               ³
//³ mv_par09  - Data Emissao De        				               ³
//³ mv_par10  - Data Emissao Ate      	  		                  ³
//³ mv_par11  - Filial Centralizadora(Nao utilizado no SIGAAPT)  ³
//³ mv_par12  - Contabiliza On-Line (Nao utilizado no SIGAAPT)   ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Carregando as Perguntas                                      ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
cFilDe     :=  If(nModulo == 64, Space(FWGETTAMFILIAL)		, mv_par01)
cFilAte    :=  If(nModulo == 64, Replicate("Z", FWGETTAMFILIAL)		, mv_par02)
cCodTitDe  :=  If(nModulo == 64, "APT"  	, mv_par03)
cCodTitAte :=  If(nModulo == 64, "APT"  	, mv_par04)
cNumTitDe  :=  If(nModulo == 64, mv_par01	, mv_par05)
cNumTitAte :=  If(nModulo == 64, mv_par02	, mv_par06)
dDtEmisDe  :=  If(nModulo == 64, mv_par03	, mv_par07)
dDtEmisAte :=  If(nModulo == 64, mv_par04	, mv_par08)
dDtVencDe  :=  If(nModulo == 64, mv_par05	, mv_par09)
dDtVencAte :=  If(nModulo == 64, mv_par06	, mv_par10)
cProcDe    :=  If(nModulo == 64, mv_par07	, "")
cProcAte   :=  If(nModulo == 64, mv_par08	, "")
cFilCentra :=  If(nModulo #  64, mv_par11 , Space(FwGetTamFilial))
lOnline    :=  If(nModulo #  64, If (mv_par12 == 1,.T.,.F.), "")

uThread := fRC1Thread()

If ValType(uThread) == "A"
	aThreads := aClone(uThread)
	lThreads := .F.
	nLoops	 := Len(aThreads)
Else
	cAliasQry := uThread
EndIf

GpProcRegua(nQtdRC1)

	//Execucao sem multi-thread
	U_CB670Gera(,,,lThreads,aThreads,cAliasQry,cFilCentra,lOnline,nModulo)



//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Ponto de entrada apos execucao do processo de integracao	   ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If lGpm670Fim
	ExecBlock( "GPM670FIM", .F., .F. )
EndIf

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Se gerou novo arquivo de erro, apaga o anterior e gera novo  ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄIf nContErro > 0
If nContErro > 0 .or. Len(aLogErro) > 0
	For nX := 1 to Len(aLogErro)
		AutoGrLog(aLogErro[nX])
	Next nX
	If(Type("cNomArqErro") == "U",AutoGRLog(""),Nil)
		
		
		
		If nContaLj > 0
			AutoGRLog(OemToAnsi(STR0015))	//"Erro na integracao - Nao existe Fornecedor / Loja no Cadastro de Fornecedores."
			AutoGRLog(cLogLj)
			For nX := 1 to Len(aLogLJ)
				AutoGRLog(aLogLJ[nX])
			Next nX
			AutoGRLog(Space(80))
			AutoGRLog(repl("-",80))
		Endif
		
		If Len(aLogAuto) > 0
			For nX := 1 to Len(aLogAuto)
				For nY := 1 to Len(aLogAuto[nX])
					AutoGrLog(aLogAuto[nX][nY])
				Next nY
			Next nX
		EndIf
		
		cNomArqErro := NomeAutoLog()
		cNomNovArq  := __RELDIR+If( nModulo # 64,"TITULOG.##R","APTILOG.##R")
		If MsErase(cNomNovArq)
			__CopyFile(cNomArqErro,cNomNovArq)
		EndIf
		MsErase(cNomArqErro)
		If MsgYesNo(OemToAnsi(STR0011 + "  ( " + Ltrim(Str(nContErro,5)) + " )  " + STR0012),;
				OemToAnsi(STR0009))//###"Ocorreram problemas com"###"titulos durante o processo de integracao. Deseja visualiza-los agora?"###"Aten‡„o"
			fVerLog()
		EndIf
	EndIf
	
	RestArea(aArea)
	
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Retorna filial original para o cFilAnt                       ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	cFilAnt := cFilAux
	
Return Nil

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³Gpem670Gera³Autor ³ Leandro Drumond       ³ Data ³ 15.08.15 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Gera os titulos contidos no RC1 no SE2   				  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe   ³ U_CB670Gera    			                                  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ 							                                  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³                                                            ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß/*/
User Function CB670Gera(xEmp,xFil,xUser,lThread,aRegsRC1,cAliasQry,cFilCentra,lOnline,nModAux)
	Local aLogError := {}
	Local aLogAuto	:= {}
	Local bErro		:= Nil
	Local aLogAux	:= {}
	Local nRegAux	:= 0
	Local nX 		:= 1
	Local nRotFim	:= 0
	Local nContAux	:= 0
	
	Private pIntegr  	:= ""
	Private cChvExt	 	:= "" //É carregado conteudo quando existe integração via EAI
	Private cOrigem		:= If( nModAux == 64,"APTA100","GPEM670")
	Private cParcela
	Private lCpoLoja
	Private lCpoParc
	Private lCodRetTit
	Private lTiText
	Private lRotinaEai
	Private nTamParc
	
	
		cParcela 	:= Space(TamSx3("E2_PARCELA")[1])
		lCpoLoja 	:= RC1->( FieldPos( "RC1_LOJA" ) ) # 0
		lCpoParc 	:= RC1->( FieldPos( "RC1_PARC" ) ) # 0
		lCodRetTit 	:= RC1->( FieldPos( "RC1_CODRET" ) ) # 0
		lTiText		:= RC1->( FieldPos( "RC1_TITEXT" ) ) # 0
		lRotinaEai  := FWHasEAI("GPEM670",.T.)
		nTamParc 	:= TamSx3("E2_PARCELA")[1]
		
		For nX := 1 to Len(aRegsRC1)
			RC1->(DbGoTo(aRegsRC1[nX]))
			GPIncProc(STR0010 + RC1->RC1_CODTIT + " - " + AllTrim(RC1->RC1_DESCRI) + " - " + RC1->RC1_NUMTIT )//"Titulo: "
			
			If ( RC1->RC1_FILTIT $ fValidFil() )
				//Gpm670Grava(cFilCentra,lOnline,nModAux,.F.)  // COMENTADA A FUNÇÃO PADRÃO
				CB670Grava(cFilCentra,lOnline,nModAux,.F.,cAliasQry)
			EndIf
			
		NExt nX
	
	
Return Nil

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³Gpm670Grava³Autor ³ Leandro Drumond       ³ Data ³ 15.08.15 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Grava os titulos contidos no RC1 no SE2   				  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe   ³ GPM670Grava    			                                  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ 							                                  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³                                                            ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß/*/
Static Function CB670Grava(cFilCentra,lOnline,nModAux,lThread,cAliasQry)
	
	Local aTitulo  := {}
	Local aCposUsr := {}
	Local aLogAux  := {}
	Local cLoja    := ""
	Local nX       := 0
	Local nOpc     := 0
	Local aRet     := {}
	Local lRet     := .T.
	Local lFilCent := RC1->( ColumnPos("RC1_FILCEN") ) > 0
	lOCAL nRec11   := 0
	Local nRecRC1  := 0
	Private lMsErroAuto 	:= .F.
	//Variavel de Controle do GetAutoGRLog
	Private lAutoErrNoFile := .T.
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Busca o codigo da loja no cadastro de fornecedores           ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If lCpoLoja
		cLoja := If(Empty( RC1->RC1_LOJA) , "00", RC1->RC1_LOJA  )
	EndIf
	
	dbSelectArea("SA2")
	dbSetOrder(1)
	
	If !SA2->(dbSeek(xFilial()+RC1->RC1_FORNEC+cLoja))
		lMsErroAuto := .T.
		nContaLj ++
		aAdd(aLogLJ, " / " + RC1->RC1_NUMTIT + OemToAnsi(STR0014) + RC1->RC1_FORNEC+"/"+cLoja+ ") ")
	EndIf
	
	If !(lMsErroAuto)
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ PE GPM670VAL para validacao especifica do titulo             ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		If lGpm670Val
			lRetPE := ExecBlock( "GPM670VAL", .F., .F. )
			If !lRetPE
				Return Nil
			EndIf
		EndIf
		
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Garante a integracao do titulo na filial definida no RC1     ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		cFilAnt := If( cFilCentra == Space(FwGetTamFilial), RC1->RC1_FILTIT, cFilCentra )
		
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Mostra o titulo que esta sendo processado                    ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		If lCpoParc .and. nModAux == 64
			cParcela := AllTrim(RC1->RC1_PARC) + Space(nTamParc - Len(AllTrim(RC1->RC1_PARC)))
		EndIf
		
		If !lRotinaEai
			
			aTitulo:= {	{"E2_FILIAL", xFilial("SE2")	,   Nil},;
				{"E2_PREFIXO"	, RC1->RC1_PREFIX	,   Nil},;
				{"E2_NUM"		, RC1->RC1_NUMTIT	,   Nil},;
				{"E2_PARCELA"	, cParcela			,   Nil},;
				{"E2_TIPO"		, aLLTRIM(RC1->RC1_TIPO)		,   Nil},;
				{"E2_FORNECE"	, RC1->RC1_FORNEC	,   Nil},;
				{"E2_NOMFOR"	, GetAdvFVal("SA2","A2_NREDUZ",xFilial("SA2")+RC1->RC1_FORNEC,1)	,   Nil},;
				{"E2_HIST"		, RC1->RC1_DESCRI	,   Nil},;
				{"E2_NATUREZ"	, RC1->RC1_NATURE	,   Nil},;
				{"E2_LOJA"		, cLoja				,	Nil},;
				{"E2_EMISSAO"	, RC1->RC1_EMISSA	,   NIL},;
				{"E2_VENCTO"	, RC1->RC1_VENCTO	,   NIL},;
				{"E2_VENCREA"	, RC1->RC1_VENREA	,   NIL},;
				{"E2_ORIGEM"	, cOrigem			,   NIL},;
				{"E2_SALDO"		, RC1->RC1_VALOR	,   NIL},;
				{"E2_CCD"		, RC1->RC1_CC		,   .F.},;
				{"E2_VALOR"		, RC1->RC1_VALOR	,   Nil}}
			
			If cpaisloc == "BRA"
				If lCodRetTit
					aAdd( aTitulo, {"E2_CODRET", RC1->RC1_CODRET,   NIL} )
				EndIf
			EndIf
			
			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³ Ponto de entrada p/ envio de  campos criados pelo usuario    ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			If lGp670Arr
				aCposUsr :=	ExecBlock("GP670ARR",.F.,.F.)
				If ValType(aCposUsr) == "A"
					For nX:= 1 To Len(aCposUsr)
						AAdd(aTitulo,aCposUsr[nX])
					Next
				EndIf
			EndIf
			
			nOpc        := 3    // Inclusao
			
			MSExecAuto({|x,y,z| FINA050(x,y,z,,,,lOnline)},aTitulo,,nOpc)
			 
			If !lMsErroAuto
				// -----------------------------------------------------------------------------------------------
				// PERSONALIZAÇÃO  - INÍCIO
				// MATEUS MEDEIROS
				// 17/10/2018 - CRIA TCLINK PARA GRAVAÇÃO DOS DADOS FINANCEIROS DA FOLHA DE PAGAMENTO NA P11.
				// -----------------------------------------------------------------------------------------------
				nRec11  := SE2->(recno())
				nRecRC1 := RC1->(Recno())
				aStruct := SE2->(dbstruct())
				aTitulo := {}
				
				For nX := 1 to Len(aStruct)
					if !(aStruct[nX][1] $ "E2_DOCHAB|E2_LINDIG|E2_PREOP|E2_DTAPUR|E2_NROREF|E2_NOMERET|E2_TPINSC|E2_FORAGE|E2_FORCTA|E2_FORBCO|E2_FCTADV|E2_FAGEDV|E2_CCUSTO|E2_IDMOV|E2_FAMAD|E2_FMPEQ|E2_PARCFAM|E2_PARCFMP|E2_FORMPAG|E2_RETINS|E2_TPESOC|E2_CLVL|E2_ITEMCTA|E2_CODOPE|E2_NOMOPE|E2_CNPJRET|E2_CNO|E2_TPDESC|")
						AAdd(aTitulo,{aStruct[nX][1],&("SE2->"+aStruct[nX][1]),NIL})
					endif 
				Next nX
				aArea := getArea()
				aAreaRC1 := RC1->(GetArea())
				aAreaSE2 := SE2->(GetArea())
				nHndERP := AdvConnection()
				
				if TCQuit() // fecho todas as conexões com o dbaccess em curso na thread.
					QOut("Conexões encerradas ")
				endif 
				
				cDBOra   := "ORACLE/Desenv1" // alterar o alias/dsn para o banco/conexão que está utilizando
				//cSrvOra  := "10.19.1.8" // alterar para o ip do DbAccess
				//Bianchini - 07/07/2020 - P12-R27 - Adequação de URL´s para MV´s
				cSrvOra  := AllTrim(GetMv(MV_XSRVTOP)) // alterar para o ip do DbAccess

				nHwnd := TCLink(cDBOra, cSrvOra, 7890)
				TcSetConn(nHwnd)
				If nHwnd >= 0
					
					//dbselectarea("SE2")
					RecLock("SE2",.T.)
					for nX := 1 to len(aTitulo)
						
						&("SE2->"+aTitulo[nX][1]) :=aTitulo[nX][2]
						
					Next nX
					SE2->(MsUnLock())
					
				EndIf
				
				TCUnlink( nHwnd )
				
				// Reabro a conexão do dbaccess com a base principal
				cDBOra   := "ORACLE/P12GPEPROD" // alterar o alias/dsn para o banco/conexão que está utilizando
				//cSrvOra  := "10.19.1.8" // alterar para o ip do DbAccess
				
				//Bianchini - 07/07/2020 - P12-R27 - Adequação de URL´s para MV´s
				cSrvOra  := AllTrim(GetMv("MV_XSRVTOP")) // alterar para o ip do DbAccess
				nHwnd := TCLink(cDBOra, cSrvOra, 7890)
				
				TcSetConn(nHwnd)
				
				RestArea(aAreaRC1)
				RestArea(aAreaSE2)
				RestArea(aArea)
				
				// -----------------------------------------------------------------------------------------------
				// PERSONALIZAÇÃO  - FIM
				// MATEUS MEDEIROS
				// 17/10/2018 - CRIA TCLINK PARA GRAVAÇÃO DOS DADOS FINANCEIROS DA FOLHA DE PAGAMENTO NA P11.
				// -----------------------------------------------------------------------------------------------
				 
								
			Endif
		EndIf
	EndIf
	
	If !lRotinaEai
		
		If lMsErroAuto
			nContErro ++
			dbSelectArea( "RC1" )
			RecLock("RC1",.F.)
			RC1->RC1_INTEGR := "2"
			RC1->(MSUNLOCK())
			If lThread
				aLogAux := GetAutoGrLog()
				Aeval(aLogAux, { |x| aAdd(aErroAux, x)  } )
			EndIf
			
		Else
			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³ Ponto de entrada p/ gravacao dos campos criados pelo usuario ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
			ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			If nModAux # 64
				If lGp670Cpo
					ExecBlock("GP670CPO",.F.,.F.)
				Endif
			EndIf
			/*dbSelectArea( "RC1" )
			RecLock("RC1",.F.)
			RC1->RC1_INTEGR := "1"
			
			If lFilCent
				RC1->RC1_FILCEN := cFilAnt
			EndIf
			RC1->(MSUNLOCK())
			*/
			
			CQUERY := " Update "+RetSqlName("RC1")+"  set RC1_INTEGR = '1' WHERE R_E_C_N_O_ = "+CVALTOCHAR(nRecRC1)
			TcSqlExec(CQUERY)
		EndIf
		
		
	Else
		pIntegr := "0"
		cChvExt := ""
		lRet := .T.
		aRet := {}
		aRet := FwIntegDef("GPEM670")
		If aRet <> nil .And. !Empty(aRet)
			lRet := aRet[1]
			If !lRet
				pIntegr := "2"
				cChvExt := ""
			EndIf
		EndIf
		
		dbSelectArea( "RC1" )
		RecLock("RC1",.F.,.F.)
		If lMsErroAuto
			nContErro ++
			RC1->RC1_INTEGR := "2"
			//If lThread
			aLogAux := GetAutoGrLog()
			Aeval(aLogAux, { |x| aAdd(aErroAux, x)  } )
			//EndIf
		Else
			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³ Ponto de entrada p/ gravacao dos campos criados pelo usuario ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			If nModAux # 64
				If lGp670Cpo
					ExecBlock("GP670CPO",.F.,.F.)
				EndIf
			EndIf
			
			RC1->RC1_INTEGR := pIntegr
			
			If lTiText
				RC1->RC1_TITEXT	:= cChvExt  //Nro do titulo externo
			EndIf
		EndIf
		MsUnLock()
	EndIf
	
Return Nil

/*/
ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿
³Fun‡„o    ³ErroForm 		³Autor³Leandro Drumond     ³ Data ³15/08/2015³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´
³Descri‡„o ³Verifica os Erros na Execucao da Formula                     ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Sintaxe   ³<Vide Parametros Formais>									 ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Parametros³<Vide Parametros Formais>									 ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Retorno   ³NIL                                                  	     ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Observa‡„o³                                                      	     ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Uso       ³Generico                                                     ³
ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
Static Function ErroForm(	oErr			,;	//01 -> Objeto oErr
	lNotErro		,;	//02 -> Se Ocorreu Erro ( Retorno Por Referencia )
	aLog			;
		)
	
	Local aErrorStack
	Local cMsgHelp	:= ""
	
	DEFAULT lNotErro	:= .T.
	
	If !( lNotErro := !( oErr:GenCode > 0 ) )
		cMsgHelp += "Error Description: "
		cMsgHelp += oErr:Description
		aAdd( aLog, cMsgHelp )
		aErrorStack	:= Str2Arr( oErr:ErrorStack , Chr( 10 ) )
		aEval( aErrorStack , { |X| aAdd(aLog, X) } )
		aEval( aErrorStack , { |cStackError| RotAddErr( cStackError ) } )
	EndIf
	
	Break
	
Return( NIL )

/*/
ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿
³Fun‡„o    ³RotAddErr	  ³Autor ³Leandro Drumond      ³ Data ³15/08/2015³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´
³Descri‡„o ³Adiciona String de Erro aa __aRotErr						 ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Sintaxe   ³<Vide Parametros Formais>									 ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Parametros³<Vide Parametros Formais>									 ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Retorno   ³NIL     													 ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Observa‡„o³                                         					 ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Uso       ³Generico 													 ³
ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
Static Function RotAddErr( cErr )
	
	Local aErr
	
	Local nErr		:= Len( cErr )
	
	DEFAULT __aRotErr := {}
	
	IF ( nErr > 220 )
		aErr := {}
		While ( nErr > 220 )
			aAdd( aErr , SubStr( cErr , 1 , 220 ) )
			cErr := SubStr( cErr , 221 )
			IF ( ( nErr := Len( cErr ) ) < 220 )
				aAdd( aErr , cErr )
				Exit
			EndIF
		End While
		aEval( aErr , { |cErr| RotAddErr( cErr ) } )
	ElseIF ( aScan( __aRotErr , { |x| x == cErr } ) == 0 )
		aAdd( __aRotErr , cErr )
	EndIF
	
Return( NIL )

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³GPM670OOk ³ Autor ³ Emerson Rosa de Souza ³ Data ³ 13.08.01 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Confirma parametros             				               ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe   ³ GPM670Ok()    			                                     ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ 							                                        ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³                                                            ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß/*/
Static Function GPM670Ok()
	
Return (MsgYesNo(OemToAnsi(STR0008),OemToAnsi(STR0009))) //"Confirma configura‡„o dos parƒmetros?"###"Atedn‡„o"

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³fRC1Thread   ³Autor  ³Leandro Drumond  ³ Data ³  15/08/15   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³Monta registros que serao executados em cada thread         º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ AP                                                         º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Static Function fRC1Thread()
	Local aThreads	:= {}
	Local aAux		:= {}
	Local uThread	:= Nil
	Local cAliasQry := GetNextAlias()
	Local cWhere 	:= ""
	Local nEmpDiv 	:= SuperGetMv("MV_RHQTRC1", NIL, 0)	//Quantidade de threads que devem ser utilizadas
	Local nCount	:= 0
	Local nTamAux	:= 0
	Local nCntReg 	:= 0
	Local nNumReg	:= 0
	Local nX		:= 0
	
	cWhere := "% RC1.RC1_FILIAL >= '" + xFilial("RC1",cFilDe) + "' AND "
	cWhere +=  " RC1.RC1_FILIAL <= '" + xFilial("RC1",cFilAte) + "' AND "
	cWhere +=  " RC1.RC1_FILTIT >= '" + cFilDe + "' AND "
	cWhere +=  " RC1.RC1_FILTIT <= '" + cFilAte + "' AND "
	cWhere +=  " RC1.RC1_CODTIT >= '" + cCodTitDe + "' AND "
	cWhere +=  " RC1.RC1_CODTIT <= '" + cCodTitAte + "' AND "
	cWhere +=  " RC1.RC1_NUMTIT >= '" + cNumTitDe + "' AND "
	cWhere +=  " RC1.RC1_NUMTIT <= '" + cNumTitAte + "' AND "
	cWhere +=  " RC1.RC1_VENCTO >= '" + DtoS(dDtVencDe) + "' AND "
	cWhere +=  " RC1.RC1_VENCTO <= '" + DtoS(dDtVencAte) + "' AND "
	cWhere +=  " RC1.RC1_EMISSA >= '" + DtoS(dDtEmisDe) + "' AND "
	cWhere +=  " RC1.RC1_EMISSA <= '" + DtoS(dDtEmisAte) + "' AND "
	
	If nModulo == 64
		cWhere +=  " RC1.RC1_PRONUM >= '" + cProcDe + "' AND "
		cWhere +=  " RC1.RC1_PRONUM <= '" + cProcAte + "' AND "
	EndIf
	
	cWhere +=  " RC1.RC1_INTEGR = '0' %"
	
	BeginSql alias cAliasQry
		SELECT COUNT(*) AS CONTADOR
		FROM %table:RC1% RC1
		WHERE %exp:cWhere% AND RC1.%notDel%
	EndSql
	
	nTamAux := nQtdRC1 := nNumReg := (cAliasQry)->CONTADOR
	
	(cAliasQry)->(DbCloseArea())
	
	If nNumReg < 500
		nEmpDiv := 0
	EndIf
	
	If nEmpDiv > 1
		nTamAux	:= Int(nNumReg / 500)
		
		//Minimo de 500 registros por thread
		nEmpDiv := Min(nEmpDiv,nTamAux)
		nTamAux := nNumReg
		
		If nEmpDiv > 1
			nCntReg	:= (nNumReg % nEmpDiv)
			nTamAux	:= (nNumReg+(nEmpDiv-nCntReg)) / nEmpDiv
		EndIf
	EndIf
	
	cAliasQry := GetNextAlias()
	
	BeginSql alias cAliasQry
		SELECT R_E_C_N_O_ AS NRECNO
		FROM %table:RC1% RC1
		WHERE %exp:cWhere% AND RC1.%notDel%
	EndSql
	
	While ( ( cAliasQry )->( !Eof() ) )
		
		/*If nCount > nTamAux
			aAdd(aThreads,aAux)
			aAux := {}
			nCount := 0
		EndIf
		*/
		aAdd( aAux , ( cAliasQry )->NRECNO )
		nCount++
		
		( cAliasQry )->( DbSkip() )
	EndDo
	
	If !Empty(aAux)
		//aAdd(aThreads,aAux)
		aThreads := aclone(aAux)
		aAux := {}
	EndIf
	
//	If Len(aThreads) > 1
		(cAliasQry)->(dbCloseArea())
		uThread := aThreads
/*	Else
		uThread := cAliasQry
		DbGoTop()
	EndIf*/
	
Return uThread

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³IntegDef  ºAutor  ³ Edna Dalfovo  	 Data ³  20/02/12   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDescricao ³ Mensagem Única						    º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ Mensagem Única                                          	    º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/

Static Function IntegDef(cXML, nTypeTrans, cTypeMessage)
	
	Local aRet
	
	// Chama a rotina que trata a parte principal
	aRet :=  GPEN670( cXML, nTypeTrans, cTypeMessage )
	
Return aRet
